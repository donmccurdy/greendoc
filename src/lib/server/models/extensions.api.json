{
  "metadata": {
    "toolPackage": "@microsoft/api-extractor",
    "toolVersion": "7.33.6",
    "schemaVersion": 1010,
    "oldestForwardsCompatibleVersion": 1001,
    "tsdocConfig": {
      "$schema": "https://developer.microsoft.com/json-schemas/tsdoc/v0/tsdoc.schema.json",
      "noStandardTags": true,
      "tagDefinitions": [
        {
          "tagName": "@alpha",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@beta",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@defaultValue",
          "syntaxKind": "block"
        },
        {
          "tagName": "@decorator",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@deprecated",
          "syntaxKind": "block"
        },
        {
          "tagName": "@eventProperty",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@example",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@experimental",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@inheritDoc",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@internal",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@label",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@link",
          "syntaxKind": "inline",
          "allowMultiple": true
        },
        {
          "tagName": "@override",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@packageDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@param",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@privateRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@public",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@readonly",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@remarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@returns",
          "syntaxKind": "block"
        },
        {
          "tagName": "@sealed",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@see",
          "syntaxKind": "block"
        },
        {
          "tagName": "@throws",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@typeParam",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@virtual",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@betaDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@internalRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@preapproved",
          "syntaxKind": "modifier"
        }
      ],
      "supportForTags": {
        "@alpha": true,
        "@beta": true,
        "@defaultValue": true,
        "@decorator": true,
        "@deprecated": true,
        "@eventProperty": true,
        "@example": true,
        "@experimental": true,
        "@inheritDoc": true,
        "@internal": true,
        "@label": true,
        "@link": true,
        "@override": true,
        "@packageDocumentation": true,
        "@param": true,
        "@privateRemarks": true,
        "@public": true,
        "@readonly": true,
        "@remarks": true,
        "@returns": true,
        "@sealed": true,
        "@see": true,
        "@throws": true,
        "@typeParam": true,
        "@virtual": true,
        "@betaDocumentation": true,
        "@internalRemarks": true,
        "@preapproved": true
      },
      "reportUnsupportedHtmlElements": false
    }
  },
  "projectFolderUrl": "http://github.com/donmccurdy/glTF-Transform/tree/main/packages/extensions",
  "kind": "Package",
  "canonicalReference": "@gltf-transform/extensions!",
  "docComment": "",
  "name": "@gltf-transform/extensions",
  "preserveMemberOrder": false,
  "members": [
    {
      "kind": "EntryPoint",
      "canonicalReference": "@gltf-transform/extensions!",
      "name": "",
      "preserveMemberOrder": false,
      "members": [
        {
          "kind": "Variable",
          "canonicalReference": "@gltf-transform/extensions!ALL_EXTENSIONS:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "ALL_EXTENSIONS: "
            },
            {
              "kind": "Content",
              "text": "(typeof "
            },
            {
              "kind": "Reference",
              "text": "DracoMeshCompression",
              "canonicalReference": "@gltf-transform/extensions!DracoMeshCompression:class"
            },
            {
              "kind": "Content",
              "text": " | typeof "
            },
            {
              "kind": "Reference",
              "text": "LightsPunctual",
              "canonicalReference": "@gltf-transform/extensions!LightsPunctual:class"
            },
            {
              "kind": "Content",
              "text": " | typeof "
            },
            {
              "kind": "Reference",
              "text": "MaterialsClearcoat",
              "canonicalReference": "@gltf-transform/extensions!MaterialsClearcoat:class"
            },
            {
              "kind": "Content",
              "text": " | typeof "
            },
            {
              "kind": "Reference",
              "text": "MaterialsEmissiveStrength",
              "canonicalReference": "@gltf-transform/extensions!MaterialsEmissiveStrength:class"
            },
            {
              "kind": "Content",
              "text": " | typeof "
            },
            {
              "kind": "Reference",
              "text": "MaterialsIOR",
              "canonicalReference": "@gltf-transform/extensions!MaterialsIOR:class"
            },
            {
              "kind": "Content",
              "text": " | typeof "
            },
            {
              "kind": "Reference",
              "text": "MaterialsIridescence",
              "canonicalReference": "@gltf-transform/extensions!MaterialsIridescence:class"
            },
            {
              "kind": "Content",
              "text": " | typeof "
            },
            {
              "kind": "Reference",
              "text": "MaterialsPBRSpecularGlossiness",
              "canonicalReference": "@gltf-transform/extensions!MaterialsPBRSpecularGlossiness:class"
            },
            {
              "kind": "Content",
              "text": " | typeof "
            },
            {
              "kind": "Reference",
              "text": "MaterialsSpecular",
              "canonicalReference": "@gltf-transform/extensions!MaterialsSpecular:class"
            },
            {
              "kind": "Content",
              "text": " | typeof "
            },
            {
              "kind": "Reference",
              "text": "MaterialsSheen",
              "canonicalReference": "@gltf-transform/extensions!MaterialsSheen:class"
            },
            {
              "kind": "Content",
              "text": " | typeof "
            },
            {
              "kind": "Reference",
              "text": "MaterialsTransmission",
              "canonicalReference": "@gltf-transform/extensions!MaterialsTransmission:class"
            },
            {
              "kind": "Content",
              "text": " | typeof "
            },
            {
              "kind": "Reference",
              "text": "MaterialsUnlit",
              "canonicalReference": "@gltf-transform/extensions!MaterialsUnlit:class"
            },
            {
              "kind": "Content",
              "text": " | typeof "
            },
            {
              "kind": "Reference",
              "text": "MaterialsVariants",
              "canonicalReference": "@gltf-transform/extensions!MaterialsVariants:class"
            },
            {
              "kind": "Content",
              "text": " | typeof "
            },
            {
              "kind": "Reference",
              "text": "MaterialsVolume",
              "canonicalReference": "@gltf-transform/extensions!MaterialsVolume:class"
            },
            {
              "kind": "Content",
              "text": " | typeof "
            },
            {
              "kind": "Reference",
              "text": "MeshQuantization",
              "canonicalReference": "@gltf-transform/extensions!MeshQuantization:class"
            },
            {
              "kind": "Content",
              "text": " | typeof "
            },
            {
              "kind": "Reference",
              "text": "TextureBasisu",
              "canonicalReference": "@gltf-transform/extensions!TextureBasisu:class"
            },
            {
              "kind": "Content",
              "text": " | typeof "
            },
            {
              "kind": "Reference",
              "text": "TextureTransform",
              "canonicalReference": "@gltf-transform/extensions!TextureTransform:class"
            },
            {
              "kind": "Content",
              "text": " | typeof "
            },
            {
              "kind": "Reference",
              "text": "XMP",
              "canonicalReference": "@gltf-transform/extensions!XMP:class"
            },
            {
              "kind": "Content",
              "text": " | typeof "
            },
            {
              "kind": "Reference",
              "text": "MeshGPUInstancing",
              "canonicalReference": "@gltf-transform/extensions!MeshGPUInstancing:class"
            },
            {
              "kind": "Content",
              "text": " | typeof "
            },
            {
              "kind": "Reference",
              "text": "MeshoptCompression",
              "canonicalReference": "@gltf-transform/extensions!MeshoptCompression:class"
            },
            {
              "kind": "Content",
              "text": " | typeof "
            },
            {
              "kind": "Reference",
              "text": "TextureWebP",
              "canonicalReference": "@gltf-transform/extensions!TextureWebP:class"
            },
            {
              "kind": "Content",
              "text": ")[]"
            }
          ],
          "fileUrlPath": "dist/extensions.d.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "ALL_EXTENSIONS",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 42
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "@gltf-transform/extensions!Clearcoat:class",
          "docComment": "/**\n * # Clearcoat\n *\n * Defines clear coat for a PBR material. See {@link MaterialsClearcoat}.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class Clearcoat extends "
            },
            {
              "kind": "Reference",
              "text": "ExtensionProperty",
              "canonicalReference": "@gltf-transform/core!ExtensionProperty:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "IClearcoat",
              "canonicalReference": "@gltf-transform/extensions!~IClearcoat:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "dist/khr-materials-clearcoat/clearcoat.d.ts",
          "releaseTag": "Public",
          "name": "Clearcoat",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "@gltf-transform/extensions!Clearcoat.EXTENSION_NAME:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static EXTENSION_NAME: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "EXTENSION_NAME",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@gltf-transform/extensions!Clearcoat#extensionName:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "extensionName: "
                },
                {
                  "kind": "Content",
                  "text": "typeof "
                },
                {
                  "kind": "Reference",
                  "text": "KHR_MATERIALS_CLEARCOAT",
                  "canonicalReference": "@gltf-transform/extensions!~KHR_MATERIALS_CLEARCOAT:var"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "extensionName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!Clearcoat#getClearcoatFactor:member(1)",
              "docComment": "/**\n * Clearcoat; linear multiplier. See {@link getClearcoatTexture}.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getClearcoatFactor(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "getClearcoatFactor"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!Clearcoat#getClearcoatNormalScale:member(1)",
              "docComment": "/**\n * Clearcoat normal scale. See {@link getClearcoatNormalTexture}.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getClearcoatNormalScale(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "getClearcoatNormalScale"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!Clearcoat#getClearcoatNormalTexture:member(1)",
              "docComment": "/**\n * Clearcoat normal map. Independent of the material base layer normal map.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getClearcoatNormalTexture(): "
                },
                {
                  "kind": "Reference",
                  "text": "Texture",
                  "canonicalReference": "@gltf-transform/core!Texture:class"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "getClearcoatNormalTexture"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!Clearcoat#getClearcoatNormalTextureInfo:member(1)",
              "docComment": "/**\n * Settings affecting the material's use of its clearcoat normal texture. If no texture is attached, {@link TextureInfo} is `null`.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getClearcoatNormalTextureInfo(): "
                },
                {
                  "kind": "Reference",
                  "text": "TextureInfo",
                  "canonicalReference": "@gltf-transform/core!TextureInfo:class"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "getClearcoatNormalTextureInfo"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!Clearcoat#getClearcoatRoughnessFactor:member(1)",
              "docComment": "/**\n * Clearcoat roughness; linear multiplier. See {@link getClearcoatRoughnessTexture}.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getClearcoatRoughnessFactor(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "getClearcoatRoughnessFactor"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!Clearcoat#getClearcoatRoughnessTexture:member(1)",
              "docComment": "/**\n * Clearcoat roughness texture; linear multiplier. The `g` channel of this texture specifies roughness, independent of the base layer's roughness.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getClearcoatRoughnessTexture(): "
                },
                {
                  "kind": "Reference",
                  "text": "Texture",
                  "canonicalReference": "@gltf-transform/core!Texture:class"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "getClearcoatRoughnessTexture"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!Clearcoat#getClearcoatRoughnessTextureInfo:member(1)",
              "docComment": "/**\n * Settings affecting the material's use of its clearcoat roughness texture. If no texture is attached, {@link TextureInfo} is `null`.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getClearcoatRoughnessTextureInfo(): "
                },
                {
                  "kind": "Reference",
                  "text": "TextureInfo",
                  "canonicalReference": "@gltf-transform/core!TextureInfo:class"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "getClearcoatRoughnessTextureInfo"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!Clearcoat#getClearcoatTexture:member(1)",
              "docComment": "/**\n * Clearcoat texture; linear multiplier. The `r` channel of this texture specifies an amount [0-1] of coating over the surface of the material, which may have its own roughness and normal map properties.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getClearcoatTexture(): "
                },
                {
                  "kind": "Reference",
                  "text": "Texture",
                  "canonicalReference": "@gltf-transform/core!Texture:class"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "getClearcoatTexture"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!Clearcoat#getClearcoatTextureInfo:member(1)",
              "docComment": "/**\n * Settings affecting the material's use of its clearcoat texture. If no texture is attached, {@link TextureInfo} is `null`.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getClearcoatTextureInfo(): "
                },
                {
                  "kind": "Reference",
                  "text": "TextureInfo",
                  "canonicalReference": "@gltf-transform/core!TextureInfo:class"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "getClearcoatTextureInfo"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!Clearcoat#getDefaults:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected getDefaults(): "
                },
                {
                  "kind": "Reference",
                  "text": "Nullable",
                  "canonicalReference": "@gltf-transform/core!Nullable:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IClearcoat",
                  "canonicalReference": "@gltf-transform/extensions!~IClearcoat:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": true,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "getDefaults"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!Clearcoat#init:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected init(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": true,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "init"
            },
            {
              "kind": "Property",
              "canonicalReference": "@gltf-transform/extensions!Clearcoat#parentTypes:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "parentTypes: "
                },
                {
                  "kind": "Content",
                  "text": "["
                },
                {
                  "kind": "Reference",
                  "text": "PropertyType.MATERIAL",
                  "canonicalReference": "@gltf-transform/core!PropertyType.MATERIAL:member"
                },
                {
                  "kind": "Content",
                  "text": "]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "parentTypes",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@gltf-transform/extensions!Clearcoat#propertyType:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "propertyType: "
                },
                {
                  "kind": "Content",
                  "text": "'Clearcoat'"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "propertyType",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!Clearcoat#setClearcoatFactor:member(1)",
              "docComment": "/**\n * Clearcoat; linear multiplier. See {@link getClearcoatTexture}.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setClearcoatFactor(factor: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "factor",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "setClearcoatFactor"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!Clearcoat#setClearcoatNormalScale:member(1)",
              "docComment": "/**\n * Clearcoat normal scale. See {@link getClearcoatNormalTexture}.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setClearcoatNormalScale(scale: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "scale",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "setClearcoatNormalScale"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!Clearcoat#setClearcoatNormalTexture:member(1)",
              "docComment": "/**\n * Sets clearcoat normal texture. See {@link getClearcoatNormalTexture}.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setClearcoatNormalTexture(texture: "
                },
                {
                  "kind": "Reference",
                  "text": "Texture",
                  "canonicalReference": "@gltf-transform/core!Texture:class"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "texture",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "setClearcoatNormalTexture"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!Clearcoat#setClearcoatRoughnessFactor:member(1)",
              "docComment": "/**\n * Clearcoat roughness; linear multiplier. See {@link getClearcoatRoughnessTexture}.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setClearcoatRoughnessFactor(factor: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "factor",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "setClearcoatRoughnessFactor"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!Clearcoat#setClearcoatRoughnessTexture:member(1)",
              "docComment": "/**\n * Sets clearcoat roughness texture. See {@link getClearcoatRoughnessTexture}.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setClearcoatRoughnessTexture(texture: "
                },
                {
                  "kind": "Reference",
                  "text": "Texture",
                  "canonicalReference": "@gltf-transform/core!Texture:class"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "texture",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "setClearcoatRoughnessTexture"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!Clearcoat#setClearcoatTexture:member(1)",
              "docComment": "/**\n * Sets clearcoat texture. See {@link getClearcoatTexture}.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setClearcoatTexture(texture: "
                },
                {
                  "kind": "Reference",
                  "text": "Texture",
                  "canonicalReference": "@gltf-transform/core!Texture:class"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "texture",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "setClearcoatTexture"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@gltf-transform/extensions!DracoMeshCompression:class",
          "docComment": "/**\n * # DracoMeshCompression\n *\n * [`KHR_draco_mesh_compression`](https://github.com/KhronosGroup/gltf/blob/main/extensions/2.0/Khronos/KHR_draco_mesh_compression/) provides advanced compression for mesh geometry.\n *\n * For models where geometry is a significant factor (>1 MB), Draco can reduce filesize by ~95% in many cases. When animation or textures are large, other complementary compression methods should be used as well. For geometry <1MB, the size of the WASM decoder library may outweigh size savings.\n *\n * Be aware that decompression happens before uploading to the GPU — this will add some latency to the parsing process, and means that compressing geometry with Draco does _not_ affect runtime performance. To improve framerate, you'll need to simplify the geometry by reducing vertex count or draw calls — not just compress it. Finally, be aware that Draco compression is lossy: repeatedly compressing and decompressing a model in a pipeline will lose precision, so compression should generally be the last stage of an art workflow, and uncompressed original files should be kept.\n *\n * A decoder or encoder from the `draco3dgltf` npm module for Node.js (or [elsewhere for web](https://stackoverflow.com/a/66978236/1314762)) is required for reading and writing, and must be provided by the application.\n *\n * ### Encoding options\n *\n * Two compression methods are available: 'edgebreaker' and 'sequential'. The edgebreaker method will give higher compression in general, but changes the order of the model's vertices. To preserve index order, use sequential compression. When a mesh uses morph targets, or a high decoding speed is selected, sequential compression will automatically be chosen.\n *\n * Both speed options affect the encoder's choice of algorithms. For example, a requirement for fast decoding may prevent the encoder from using the best compression methods even if the encoding speed is set to 0. In general, the faster of the two options limits the choice of features that can be used by the encoder. Setting --decodeSpeed to be faster than the --encodeSpeed may allow the encoder to choose the optimal method out of the available features for the given --decodeSpeed.\n *\n * ### Example\n * ```typescript\n * import { NodeIO } from '@gltf-transform/core';\n * import { DracoMeshCompression } from '@gltf-transform/extensions';\n *\n * import draco3d from 'draco3dgltf';\n *\n * // ...\n *\n * const io = new NodeIO()\n * \t.registerExtensions([DracoMeshCompression])\n * \t.registerDependencies({\n * \t\t'draco3d.decoder': await draco3d.createDecoderModule(), // Optional.\n * \t\t'draco3d.encoder': await draco3d.createEncoderModule(), // Optional.\n * \t});\n *\n * // Read and decode.\n * const document = await io.read('compressed.glb');\n *\n * // Write and encode.\n * document.createExtension(DracoMeshCompression)\n * \t.setRequired(true)\n * \t.setEncoderOptions({\n * \t\tmethod: DracoMeshCompression.EncoderMethod.EDGEBREAKER,\n * \t\tencodeSpeed: 5,\n * \t\tdecodeSpeed: 5,\n * \t});\n * await io.write('compressed.glb', document);\n * ```\n *\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class DracoMeshCompression extends "
            },
            {
              "kind": "Reference",
              "text": "Extension",
              "canonicalReference": "@gltf-transform/core!Extension:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "dist/khr-draco-mesh-compression/draco-mesh-compression.d.ts",
          "releaseTag": "Public",
          "name": "DracoMeshCompression",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "@gltf-transform/extensions!DracoMeshCompression.EncoderMethod:member",
              "docComment": "/**\n * Compression method. `EncoderMethod.EDGEBREAKER` usually provides a higher compression ratio, while `EncoderMethod.SEQUENTIAL` better preserves original verter order.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static readonly EncoderMethod: "
                },
                {
                  "kind": "Content",
                  "text": "typeof "
                },
                {
                  "kind": "Reference",
                  "text": "EncoderMethod",
                  "canonicalReference": "@gltf-transform/extensions!~EncoderMethod:enum"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "EncoderMethod",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": true,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@gltf-transform/extensions!DracoMeshCompression.EXTENSION_NAME:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static readonly EXTENSION_NAME = "
                },
                {
                  "kind": "Content",
                  "text": "\"KHR_draco_mesh_compression\""
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "EXTENSION_NAME",
              "propertyTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@gltf-transform/extensions!DracoMeshCompression#extensionName:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly extensionName = "
                },
                {
                  "kind": "Content",
                  "text": "\"KHR_draco_mesh_compression\""
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "extensionName",
              "propertyTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!DracoMeshCompression#install:member(1)",
              "docComment": "/**\n * @hidden\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "install(key: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", dependency: "
                },
                {
                  "kind": "Content",
                  "text": "unknown"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "key",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "dependency",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "install"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!DracoMeshCompression#preread:member(1)",
              "docComment": "/**\n * @hidden\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "preread(context: "
                },
                {
                  "kind": "Reference",
                  "text": "ReaderContext",
                  "canonicalReference": "@gltf-transform/core!ReaderContext:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "context",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "preread"
            },
            {
              "kind": "Property",
              "canonicalReference": "@gltf-transform/extensions!DracoMeshCompression#prereadTypes:member",
              "docComment": "/**\n * @hidden\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly prereadTypes: "
                },
                {
                  "kind": "Reference",
                  "text": "PropertyType",
                  "canonicalReference": "@gltf-transform/core!PropertyType:enum"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "prereadTypes",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!DracoMeshCompression#prewrite:member(1)",
              "docComment": "/**\n * @hidden\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "prewrite(context: "
                },
                {
                  "kind": "Reference",
                  "text": "WriterContext",
                  "canonicalReference": "@gltf-transform/core!WriterContext:class"
                },
                {
                  "kind": "Content",
                  "text": ", _propertyType: "
                },
                {
                  "kind": "Reference",
                  "text": "PropertyType",
                  "canonicalReference": "@gltf-transform/core!PropertyType:enum"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "context",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "_propertyType",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "prewrite"
            },
            {
              "kind": "Property",
              "canonicalReference": "@gltf-transform/extensions!DracoMeshCompression#prewriteTypes:member",
              "docComment": "/**\n * @hidden\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly prewriteTypes: "
                },
                {
                  "kind": "Reference",
                  "text": "PropertyType",
                  "canonicalReference": "@gltf-transform/core!PropertyType:enum"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "prewriteTypes",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!DracoMeshCompression#read:member(1)",
              "docComment": "/**\n * @hidden\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "read(_context: "
                },
                {
                  "kind": "Reference",
                  "text": "ReaderContext",
                  "canonicalReference": "@gltf-transform/core!ReaderContext:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "_context",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "read"
            },
            {
              "kind": "Property",
              "canonicalReference": "@gltf-transform/extensions!DracoMeshCompression#readDependencies:member",
              "docComment": "/**\n * @hidden\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly readDependencies: "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "readDependencies",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!DracoMeshCompression#setEncoderOptions:member(1)",
              "docComment": "/**\n * Sets Draco compression options. Compression does not take effect until the Document is written with an I/O class.\n *\n * Defaults:\n * ```\n * decodeSpeed?: number = 5;\n * encodeSpeed?: number = 5;\n * method?: EncoderMethod = EncoderMethod.EDGEBREAKER;\n * quantizationBits?: {[ATTRIBUTE_NAME]: bits};\n * quantizationVolume?: 'mesh' | 'scene' | bbox = 'mesh';\n * ```\n *\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setEncoderOptions(options: "
                },
                {
                  "kind": "Reference",
                  "text": "EncoderOptions",
                  "canonicalReference": "@gltf-transform/extensions!~EncoderOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "setEncoderOptions"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!DracoMeshCompression#write:member(1)",
              "docComment": "/**\n * @hidden\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "write(context: "
                },
                {
                  "kind": "Reference",
                  "text": "WriterContext",
                  "canonicalReference": "@gltf-transform/core!WriterContext:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "context",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "write"
            },
            {
              "kind": "Property",
              "canonicalReference": "@gltf-transform/extensions!DracoMeshCompression#writeDependencies:member",
              "docComment": "/**\n * @hidden\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly writeDependencies: "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "writeDependencies",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@gltf-transform/extensions!EmissiveStrength:class",
          "docComment": "/**\n * # EmissiveStrength\n *\n * Defines emissive strength for a PBR {@link Material}, allowing high-dynamic-range (HDR) emissive materials. See {@link MaterialsEmissiveStrength}.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class EmissiveStrength extends "
            },
            {
              "kind": "Reference",
              "text": "ExtensionProperty",
              "canonicalReference": "@gltf-transform/core!ExtensionProperty:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "IEmissiveStrength",
              "canonicalReference": "@gltf-transform/extensions!~IEmissiveStrength:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "dist/khr-materials-emissive-strength/emissive-strength.d.ts",
          "releaseTag": "Public",
          "name": "EmissiveStrength",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "@gltf-transform/extensions!EmissiveStrength.EXTENSION_NAME:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static EXTENSION_NAME: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "EXTENSION_NAME",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@gltf-transform/extensions!EmissiveStrength#extensionName:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "extensionName: "
                },
                {
                  "kind": "Content",
                  "text": "typeof "
                },
                {
                  "kind": "Reference",
                  "text": "KHR_MATERIALS_EMISSIVE_STRENGTH",
                  "canonicalReference": "@gltf-transform/extensions!~KHR_MATERIALS_EMISSIVE_STRENGTH:var"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "extensionName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!EmissiveStrength#getDefaults:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected getDefaults(): "
                },
                {
                  "kind": "Reference",
                  "text": "Nullable",
                  "canonicalReference": "@gltf-transform/core!Nullable:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IEmissiveStrength",
                  "canonicalReference": "@gltf-transform/extensions!~IEmissiveStrength:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": true,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "getDefaults"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!EmissiveStrength#getEmissiveStrength:member(1)",
              "docComment": "/**\n * EmissiveStrength.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getEmissiveStrength(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "getEmissiveStrength"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!EmissiveStrength#init:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected init(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": true,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "init"
            },
            {
              "kind": "Property",
              "canonicalReference": "@gltf-transform/extensions!EmissiveStrength#parentTypes:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "parentTypes: "
                },
                {
                  "kind": "Content",
                  "text": "["
                },
                {
                  "kind": "Reference",
                  "text": "PropertyType.MATERIAL",
                  "canonicalReference": "@gltf-transform/core!PropertyType.MATERIAL:member"
                },
                {
                  "kind": "Content",
                  "text": "]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "parentTypes",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@gltf-transform/extensions!EmissiveStrength#propertyType:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "propertyType: "
                },
                {
                  "kind": "Content",
                  "text": "'EmissiveStrength'"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "propertyType",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!EmissiveStrength#setEmissiveStrength:member(1)",
              "docComment": "/**\n * EmissiveStrength.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setEmissiveStrength(strength: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "strength",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "setEmissiveStrength"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Variable",
          "canonicalReference": "@gltf-transform/extensions!INSTANCE_ATTRIBUTE:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "INSTANCE_ATTRIBUTE = "
            },
            {
              "kind": "Content",
              "text": "\"INSTANCE_ATTRIBUTE\""
            }
          ],
          "fileUrlPath": "dist/ext-mesh-gpu-instancing/instanced-mesh.d.ts",
          "initializerTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "INSTANCE_ATTRIBUTE",
          "variableTypeTokenRange": {
            "startIndex": 0,
            "endIndex": 0
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "@gltf-transform/extensions!InstancedMesh:class",
          "docComment": "/**\n * # InstancedMesh\n *\n * Defines GPU instances of a {@link Mesh} under one {@link Node}. See {@link MeshGPUInstancing}.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class InstancedMesh extends "
            },
            {
              "kind": "Reference",
              "text": "ExtensionProperty",
              "canonicalReference": "@gltf-transform/core!ExtensionProperty:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "IInstancedMesh",
              "canonicalReference": "@gltf-transform/extensions!~IInstancedMesh:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "dist/ext-mesh-gpu-instancing/instanced-mesh.d.ts",
          "releaseTag": "Public",
          "name": "InstancedMesh",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "@gltf-transform/extensions!InstancedMesh.EXTENSION_NAME:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static EXTENSION_NAME: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "EXTENSION_NAME",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@gltf-transform/extensions!InstancedMesh#extensionName:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "extensionName: "
                },
                {
                  "kind": "Content",
                  "text": "typeof "
                },
                {
                  "kind": "Reference",
                  "text": "EXT_MESH_GPU_INSTANCING",
                  "canonicalReference": "@gltf-transform/extensions!~EXT_MESH_GPU_INSTANCING:var"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "extensionName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!InstancedMesh#getAttribute:member(1)",
              "docComment": "/**\n * Returns an instance attribute as an {@link Accessor}.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getAttribute(semantic: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Accessor",
                  "canonicalReference": "@gltf-transform/core!Accessor:class"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "semantic",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "getAttribute"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!InstancedMesh#getDefaults:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected getDefaults(): "
                },
                {
                  "kind": "Reference",
                  "text": "Nullable",
                  "canonicalReference": "@gltf-transform/core!Nullable:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IInstancedMesh",
                  "canonicalReference": "@gltf-transform/extensions!~IInstancedMesh:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": true,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "getDefaults"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!InstancedMesh#init:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected init(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": true,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "init"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!InstancedMesh#listAttributes:member(1)",
              "docComment": "/**\n * Lists all instance attributes {@link Accessor}s associated with the InstancedMesh. Order will be consistent with the order returned by {@link .listSemantics}().\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "listAttributes(): "
                },
                {
                  "kind": "Reference",
                  "text": "Accessor",
                  "canonicalReference": "@gltf-transform/core!Accessor:class"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "listAttributes"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!InstancedMesh#listSemantics:member(1)",
              "docComment": "/**\n * Lists all instance attribute semantics associated with the primitive. Order will be consistent with the order returned by {@link .listAttributes}().\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "listSemantics(): "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "listSemantics"
            },
            {
              "kind": "Property",
              "canonicalReference": "@gltf-transform/extensions!InstancedMesh#parentTypes:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "parentTypes: "
                },
                {
                  "kind": "Content",
                  "text": "["
                },
                {
                  "kind": "Reference",
                  "text": "PropertyType.NODE",
                  "canonicalReference": "@gltf-transform/core!PropertyType.NODE:member"
                },
                {
                  "kind": "Content",
                  "text": "]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "parentTypes",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@gltf-transform/extensions!InstancedMesh#propertyType:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "propertyType: "
                },
                {
                  "kind": "Content",
                  "text": "'InstancedMesh'"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "propertyType",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!InstancedMesh#setAttribute:member(1)",
              "docComment": "/**\n * Sets an instance attribute to an {@link Accessor}. All attributes must have the same instance count.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setAttribute(semantic: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", accessor: "
                },
                {
                  "kind": "Reference",
                  "text": "Accessor",
                  "canonicalReference": "@gltf-transform/core!Accessor:class"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "semantic",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "accessor",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "setAttribute"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@gltf-transform/extensions!IOR:class",
          "docComment": "/**\n * # IOR\n *\n * Defines index of refraction for a PBR {@link Material}. See {@link MaterialsIOR}.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class IOR extends "
            },
            {
              "kind": "Reference",
              "text": "ExtensionProperty",
              "canonicalReference": "@gltf-transform/core!ExtensionProperty:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "IIOR",
              "canonicalReference": "@gltf-transform/extensions!~IIOR:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "dist/khr-materials-ior/ior.d.ts",
          "releaseTag": "Public",
          "name": "IOR",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "@gltf-transform/extensions!IOR.EXTENSION_NAME:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static EXTENSION_NAME: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "EXTENSION_NAME",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@gltf-transform/extensions!IOR#extensionName:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "extensionName: "
                },
                {
                  "kind": "Content",
                  "text": "typeof "
                },
                {
                  "kind": "Reference",
                  "text": "KHR_MATERIALS_IOR",
                  "canonicalReference": "@gltf-transform/extensions!~KHR_MATERIALS_IOR:var"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "extensionName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!IOR#getDefaults:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected getDefaults(): "
                },
                {
                  "kind": "Reference",
                  "text": "Nullable",
                  "canonicalReference": "@gltf-transform/core!Nullable:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IIOR",
                  "canonicalReference": "@gltf-transform/extensions!~IIOR:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": true,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "getDefaults"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!IOR#getIOR:member(1)",
              "docComment": "/**\n * IOR.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getIOR(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "getIOR"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!IOR#init:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected init(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": true,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "init"
            },
            {
              "kind": "Property",
              "canonicalReference": "@gltf-transform/extensions!IOR#parentTypes:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "parentTypes: "
                },
                {
                  "kind": "Content",
                  "text": "["
                },
                {
                  "kind": "Reference",
                  "text": "PropertyType.MATERIAL",
                  "canonicalReference": "@gltf-transform/core!PropertyType.MATERIAL:member"
                },
                {
                  "kind": "Content",
                  "text": "]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "parentTypes",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@gltf-transform/extensions!IOR#propertyType:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "propertyType: "
                },
                {
                  "kind": "Content",
                  "text": "'IOR'"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "propertyType",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!IOR#setIOR:member(1)",
              "docComment": "/**\n * IOR.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setIOR(ior: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "ior",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "setIOR"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@gltf-transform/extensions!Iridescence:class",
          "docComment": "/**\n * # Iridescence\n *\n * Defines iridescence (thin film interference) on a PBR {@link Material}. See {@link MaterialsIridescence}.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class Iridescence extends "
            },
            {
              "kind": "Reference",
              "text": "ExtensionProperty",
              "canonicalReference": "@gltf-transform/core!ExtensionProperty:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "IIridescence",
              "canonicalReference": "@gltf-transform/extensions!~IIridescence:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "dist/khr-materials-iridescence/iridescence.d.ts",
          "releaseTag": "Public",
          "name": "Iridescence",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "@gltf-transform/extensions!Iridescence.EXTENSION_NAME:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static EXTENSION_NAME: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "EXTENSION_NAME",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@gltf-transform/extensions!Iridescence#extensionName:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "extensionName: "
                },
                {
                  "kind": "Content",
                  "text": "typeof "
                },
                {
                  "kind": "Reference",
                  "text": "KHR_MATERIALS_IRIDESCENCE",
                  "canonicalReference": "@gltf-transform/extensions!~KHR_MATERIALS_IRIDESCENCE:var"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "extensionName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!Iridescence#getDefaults:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected getDefaults(): "
                },
                {
                  "kind": "Reference",
                  "text": "Nullable",
                  "canonicalReference": "@gltf-transform/core!Nullable:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IIridescence",
                  "canonicalReference": "@gltf-transform/extensions!~IIridescence:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": true,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "getDefaults"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!Iridescence#getIridescenceFactor:member(1)",
              "docComment": "/**\n * Iridescence; linear multiplier. See {@link getIridescenceTexture}.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getIridescenceFactor(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "getIridescenceFactor"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!Iridescence#getIridescenceIOR:member(1)",
              "docComment": "/**\n * Index of refraction of the dielectric thin-film layer.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getIridescenceIOR(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "getIridescenceIOR"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!Iridescence#getIridescenceTexture:member(1)",
              "docComment": "/**\n * Iridescence intensity.\n *\n * Only the red (R) channel is used for iridescence intensity, but this texture may optionally be packed with additional data in the other channels.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getIridescenceTexture(): "
                },
                {
                  "kind": "Reference",
                  "text": "Texture",
                  "canonicalReference": "@gltf-transform/core!Texture:class"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "getIridescenceTexture"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!Iridescence#getIridescenceTextureInfo:member(1)",
              "docComment": "/**\n * Settings affecting the material's use of its iridescence texture. If no texture is attached, {@link TextureInfo} is `null`.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getIridescenceTextureInfo(): "
                },
                {
                  "kind": "Reference",
                  "text": "TextureInfo",
                  "canonicalReference": "@gltf-transform/core!TextureInfo:class"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "getIridescenceTextureInfo"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!Iridescence#getIridescenceThicknessMaximum:member(1)",
              "docComment": "/**\n * Maximum thickness of the thin-film layer, in nanometers (nm).\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getIridescenceThicknessMaximum(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "getIridescenceThicknessMaximum"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!Iridescence#getIridescenceThicknessMinimum:member(1)",
              "docComment": "/**\n * Minimum thickness of the thin-film layer, in nanometers (nm).\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getIridescenceThicknessMinimum(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "getIridescenceThicknessMinimum"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!Iridescence#getIridescenceThicknessTexture:member(1)",
              "docComment": "/**\n * The green channel of this texture defines the thickness of the thin-film layer by blending between the minimum and maximum thickness.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getIridescenceThicknessTexture(): "
                },
                {
                  "kind": "Reference",
                  "text": "Texture",
                  "canonicalReference": "@gltf-transform/core!Texture:class"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "getIridescenceThicknessTexture"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!Iridescence#getIridescenceThicknessTextureInfo:member(1)",
              "docComment": "/**\n * Settings affecting the material's use of its iridescence thickness texture. If no texture is attached, {@link TextureInfo} is `null`.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getIridescenceThicknessTextureInfo(): "
                },
                {
                  "kind": "Reference",
                  "text": "TextureInfo",
                  "canonicalReference": "@gltf-transform/core!TextureInfo:class"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "getIridescenceThicknessTextureInfo"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!Iridescence#init:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected init(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": true,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "init"
            },
            {
              "kind": "Property",
              "canonicalReference": "@gltf-transform/extensions!Iridescence#parentTypes:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "parentTypes: "
                },
                {
                  "kind": "Content",
                  "text": "["
                },
                {
                  "kind": "Reference",
                  "text": "PropertyType.MATERIAL",
                  "canonicalReference": "@gltf-transform/core!PropertyType.MATERIAL:member"
                },
                {
                  "kind": "Content",
                  "text": "]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "parentTypes",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@gltf-transform/extensions!Iridescence#propertyType:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "propertyType: "
                },
                {
                  "kind": "Content",
                  "text": "'Iridescence'"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "propertyType",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!Iridescence#setIridescenceFactor:member(1)",
              "docComment": "/**\n * Iridescence; linear multiplier. See {@link getIridescenceTexture}.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setIridescenceFactor(factor: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "factor",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "setIridescenceFactor"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!Iridescence#setIridescenceIOR:member(1)",
              "docComment": "/**\n * Index of refraction of the dielectric thin-film layer.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setIridescenceIOR(ior: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "ior",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "setIridescenceIOR"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!Iridescence#setIridescenceTexture:member(1)",
              "docComment": "/**\n * Iridescence intensity. See {@link getIridescenceTexture}.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setIridescenceTexture(texture: "
                },
                {
                  "kind": "Reference",
                  "text": "Texture",
                  "canonicalReference": "@gltf-transform/core!Texture:class"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "texture",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "setIridescenceTexture"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!Iridescence#setIridescenceThicknessMaximum:member(1)",
              "docComment": "/**\n * Maximum thickness of the thin-film layer, in nanometers (nm).\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setIridescenceThicknessMaximum(thickness: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "thickness",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "setIridescenceThicknessMaximum"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!Iridescence#setIridescenceThicknessMinimum:member(1)",
              "docComment": "/**\n * Minimum thickness of the thin-film layer, in nanometers (nm).\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setIridescenceThicknessMinimum(thickness: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "thickness",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "setIridescenceThicknessMinimum"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!Iridescence#setIridescenceThicknessTexture:member(1)",
              "docComment": "/**\n * Sets iridescence thickness texture. See {@link getIridescenceThicknessTexture}.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setIridescenceThicknessTexture(texture: "
                },
                {
                  "kind": "Reference",
                  "text": "Texture",
                  "canonicalReference": "@gltf-transform/core!Texture:class"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "texture",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "setIridescenceThicknessTexture"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Variable",
          "canonicalReference": "@gltf-transform/extensions!KHRONOS_EXTENSIONS:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "KHRONOS_EXTENSIONS: "
            },
            {
              "kind": "Content",
              "text": "(typeof "
            },
            {
              "kind": "Reference",
              "text": "DracoMeshCompression",
              "canonicalReference": "@gltf-transform/extensions!DracoMeshCompression:class"
            },
            {
              "kind": "Content",
              "text": " | typeof "
            },
            {
              "kind": "Reference",
              "text": "LightsPunctual",
              "canonicalReference": "@gltf-transform/extensions!LightsPunctual:class"
            },
            {
              "kind": "Content",
              "text": " | typeof "
            },
            {
              "kind": "Reference",
              "text": "MaterialsClearcoat",
              "canonicalReference": "@gltf-transform/extensions!MaterialsClearcoat:class"
            },
            {
              "kind": "Content",
              "text": " | typeof "
            },
            {
              "kind": "Reference",
              "text": "MaterialsEmissiveStrength",
              "canonicalReference": "@gltf-transform/extensions!MaterialsEmissiveStrength:class"
            },
            {
              "kind": "Content",
              "text": " | typeof "
            },
            {
              "kind": "Reference",
              "text": "MaterialsIOR",
              "canonicalReference": "@gltf-transform/extensions!MaterialsIOR:class"
            },
            {
              "kind": "Content",
              "text": " | typeof "
            },
            {
              "kind": "Reference",
              "text": "MaterialsIridescence",
              "canonicalReference": "@gltf-transform/extensions!MaterialsIridescence:class"
            },
            {
              "kind": "Content",
              "text": " | typeof "
            },
            {
              "kind": "Reference",
              "text": "MaterialsPBRSpecularGlossiness",
              "canonicalReference": "@gltf-transform/extensions!MaterialsPBRSpecularGlossiness:class"
            },
            {
              "kind": "Content",
              "text": " | typeof "
            },
            {
              "kind": "Reference",
              "text": "MaterialsSpecular",
              "canonicalReference": "@gltf-transform/extensions!MaterialsSpecular:class"
            },
            {
              "kind": "Content",
              "text": " | typeof "
            },
            {
              "kind": "Reference",
              "text": "MaterialsSheen",
              "canonicalReference": "@gltf-transform/extensions!MaterialsSheen:class"
            },
            {
              "kind": "Content",
              "text": " | typeof "
            },
            {
              "kind": "Reference",
              "text": "MaterialsTransmission",
              "canonicalReference": "@gltf-transform/extensions!MaterialsTransmission:class"
            },
            {
              "kind": "Content",
              "text": " | typeof "
            },
            {
              "kind": "Reference",
              "text": "MaterialsUnlit",
              "canonicalReference": "@gltf-transform/extensions!MaterialsUnlit:class"
            },
            {
              "kind": "Content",
              "text": " | typeof "
            },
            {
              "kind": "Reference",
              "text": "MaterialsVariants",
              "canonicalReference": "@gltf-transform/extensions!MaterialsVariants:class"
            },
            {
              "kind": "Content",
              "text": " | typeof "
            },
            {
              "kind": "Reference",
              "text": "MaterialsVolume",
              "canonicalReference": "@gltf-transform/extensions!MaterialsVolume:class"
            },
            {
              "kind": "Content",
              "text": " | typeof "
            },
            {
              "kind": "Reference",
              "text": "MeshQuantization",
              "canonicalReference": "@gltf-transform/extensions!MeshQuantization:class"
            },
            {
              "kind": "Content",
              "text": " | typeof "
            },
            {
              "kind": "Reference",
              "text": "TextureBasisu",
              "canonicalReference": "@gltf-transform/extensions!TextureBasisu:class"
            },
            {
              "kind": "Content",
              "text": " | typeof "
            },
            {
              "kind": "Reference",
              "text": "TextureTransform",
              "canonicalReference": "@gltf-transform/extensions!TextureTransform:class"
            },
            {
              "kind": "Content",
              "text": " | typeof "
            },
            {
              "kind": "Reference",
              "text": "XMP",
              "canonicalReference": "@gltf-transform/extensions!XMP:class"
            },
            {
              "kind": "Content",
              "text": ")[]"
            }
          ],
          "fileUrlPath": "dist/extensions.d.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "KHRONOS_EXTENSIONS",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 36
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "@gltf-transform/extensions!Light:class",
          "docComment": "/**\n * # Light\n *\n * Defines a light attached to a {@link Node}. See {@link LightsPunctual}.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class Light extends "
            },
            {
              "kind": "Reference",
              "text": "ExtensionProperty",
              "canonicalReference": "@gltf-transform/core!ExtensionProperty:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ILight",
              "canonicalReference": "@gltf-transform/extensions!~ILight:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "dist/khr-lights-punctual/light.d.ts",
          "releaseTag": "Public",
          "name": "Light",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "@gltf-transform/extensions!Light.EXTENSION_NAME:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static EXTENSION_NAME: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "EXTENSION_NAME",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@gltf-transform/extensions!Light#extensionName:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "extensionName: "
                },
                {
                  "kind": "Content",
                  "text": "typeof "
                },
                {
                  "kind": "Reference",
                  "text": "KHR_LIGHTS_PUNCTUAL",
                  "canonicalReference": "@gltf-transform/extensions!~KHR_LIGHTS_PUNCTUAL:var"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "extensionName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!Light#getColor:member(1)",
              "docComment": "/**\n * Light color; Linear-sRGB components.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getColor(): "
                },
                {
                  "kind": "Reference",
                  "text": "vec3",
                  "canonicalReference": "@gltf-transform/core!vec3:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "getColor"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!Light#getColorHex:member(1)",
              "docComment": "/**\n * Light color; sRGB hexadecimal color.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getColorHex(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "getColorHex"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!Light#getDefaults:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected getDefaults(): "
                },
                {
                  "kind": "Reference",
                  "text": "Nullable",
                  "canonicalReference": "@gltf-transform/core!Nullable:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ILight",
                  "canonicalReference": "@gltf-transform/extensions!~ILight:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": true,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "getDefaults"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!Light#getInnerConeAngle:member(1)",
              "docComment": "/**\n * Angle, in radians, from centre of spotlight where falloff begins. Must be ≥ 0 and < outerConeAngle.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getInnerConeAngle(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "getInnerConeAngle"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!Light#getIntensity:member(1)",
              "docComment": "/**\n * Brightness of light. Units depend on the type of light: point and spot lights use luminous intensity in candela (lm/sr) while directional lights use illuminance in lux (lm/m2).\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getIntensity(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "getIntensity"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!Light#getOuterConeAngle:member(1)",
              "docComment": "/**\n * Angle, in radians, from centre of spotlight where falloff ends. Must be > innerConeAngle and ≤ PI / 2.0.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getOuterConeAngle(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "getOuterConeAngle"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!Light#getRange:member(1)",
              "docComment": "/**\n * Hint defining a distance cutoff at which the light's intensity may be considered to have reached zero. Supported only for point and spot lights. Must be > 0. When undefined, range is assumed to be infinite.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getRange(): "
                },
                {
                  "kind": "Content",
                  "text": "number | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "getRange"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!Light#getType:member(1)",
              "docComment": "/**\n * Type.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getType(): "
                },
                {
                  "kind": "Reference",
                  "text": "PunctualLightType",
                  "canonicalReference": "@gltf-transform/extensions!~PunctualLightType:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "getType"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!Light#init:member(1)",
              "docComment": "/**\n * ******************************************************************************************** INSTANCE.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected init(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": true,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "init"
            },
            {
              "kind": "Property",
              "canonicalReference": "@gltf-transform/extensions!Light#parentTypes:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "parentTypes: "
                },
                {
                  "kind": "Content",
                  "text": "["
                },
                {
                  "kind": "Reference",
                  "text": "PropertyType.NODE",
                  "canonicalReference": "@gltf-transform/core!PropertyType.NODE:member"
                },
                {
                  "kind": "Content",
                  "text": "]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "parentTypes",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@gltf-transform/extensions!Light#propertyType:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "propertyType: "
                },
                {
                  "kind": "Content",
                  "text": "'Light'"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "propertyType",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!Light#setColor:member(1)",
              "docComment": "/**\n * Light color; Linear-sRGB components.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setColor(color: "
                },
                {
                  "kind": "Reference",
                  "text": "vec3",
                  "canonicalReference": "@gltf-transform/core!vec3:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "color",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "setColor"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!Light#setColorHex:member(1)",
              "docComment": "/**\n * Light color; sRGB hexadecimal color.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setColorHex(hex: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "hex",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "setColorHex"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!Light#setInnerConeAngle:member(1)",
              "docComment": "/**\n * Angle, in radians, from centre of spotlight where falloff begins. Must be ≥ 0 and < outerConeAngle.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setInnerConeAngle(angle: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "angle",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "setInnerConeAngle"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!Light#setIntensity:member(1)",
              "docComment": "/**\n * Brightness of light. Units depend on the type of light: point and spot lights use luminous intensity in candela (lm/sr) while directional lights use illuminance in lux (lm/m2).\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setIntensity(intensity: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "intensity",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "setIntensity"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!Light#setOuterConeAngle:member(1)",
              "docComment": "/**\n * Angle, in radians, from centre of spotlight where falloff ends. Must be > innerConeAngle and ≤ PI / 2.0.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setOuterConeAngle(angle: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "angle",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "setOuterConeAngle"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!Light#setRange:member(1)",
              "docComment": "/**\n * Hint defining a distance cutoff at which the light's intensity may be considered to have reached zero. Supported only for point and spot lights. Must be > 0. When undefined, range is assumed to be infinite.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setRange(range: "
                },
                {
                  "kind": "Content",
                  "text": "number | null"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "range",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "setRange"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!Light#setType:member(1)",
              "docComment": "/**\n * Type.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setType(type: "
                },
                {
                  "kind": "Reference",
                  "text": "PunctualLightType",
                  "canonicalReference": "@gltf-transform/extensions!~PunctualLightType:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "type",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "setType"
            },
            {
              "kind": "Property",
              "canonicalReference": "@gltf-transform/extensions!Light.Type:member",
              "docComment": "/**\n * ******************************************************************************************** CONSTANTS.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static Type: "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, "
                },
                {
                  "kind": "Reference",
                  "text": "PunctualLightType",
                  "canonicalReference": "@gltf-transform/extensions!~PunctualLightType:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "Type",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "isStatic": true,
              "isProtected": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@gltf-transform/extensions!LightsPunctual:class",
          "docComment": "/**\n * # LightsPunctual\n *\n * [`KHR_lights_punctual`](https://github.com/KhronosGroup/gltf/blob/main/extensions/2.0/Khronos/KHR_lights_punctual/) defines three \"punctual\" light types: directional, point and spot.\n *\n * Punctual lights are parameterized, infinitely small points that emit light in well-defined directions and intensities. Lights are referenced by nodes and inherit the transform of that node.\n *\n * Properties: - {@link Light}\n *\n * ### Example\n * ```typescript\n * import { LightsPunctual, Light, LightType } from '@gltf-transform/extensions';\n *\n * // Create an Extension attached to the Document.\n * const lightsExtension = document.createExtension(LightsPunctual);\n *\n * // Create a Light property.\n * const light = lightsExtension.createLight()\n * \t.setType(LightType.POINT)\n * \t.setIntensity(2.0)\n * \t.setColor([1.0, 0.0, 0.0]);\n *\n * // Attach the property to a Material.\n * node.setExtension('KHR_lights_punctual', light);\n * ```\n *\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class LightsPunctual extends "
            },
            {
              "kind": "Reference",
              "text": "Extension",
              "canonicalReference": "@gltf-transform/core!Extension:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "dist/khr-lights-punctual/lights-punctual.d.ts",
          "releaseTag": "Public",
          "name": "LightsPunctual",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!LightsPunctual#createLight:member(1)",
              "docComment": "/**\n * Creates a new punctual Light property for use on a {@link Node}.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "createLight(name?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Light",
                  "canonicalReference": "@gltf-transform/extensions!Light:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "name",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "name": "createLight"
            },
            {
              "kind": "Property",
              "canonicalReference": "@gltf-transform/extensions!LightsPunctual.EXTENSION_NAME:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static readonly EXTENSION_NAME = "
                },
                {
                  "kind": "Content",
                  "text": "\"KHR_lights_punctual\""
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "EXTENSION_NAME",
              "propertyTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@gltf-transform/extensions!LightsPunctual#extensionName:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly extensionName = "
                },
                {
                  "kind": "Content",
                  "text": "\"KHR_lights_punctual\""
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "extensionName",
              "propertyTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!LightsPunctual#read:member(1)",
              "docComment": "/**\n * @hidden\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "read(context: "
                },
                {
                  "kind": "Reference",
                  "text": "ReaderContext",
                  "canonicalReference": "@gltf-transform/core!ReaderContext:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "context",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "read"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!LightsPunctual#write:member(1)",
              "docComment": "/**\n * @hidden\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "write(context: "
                },
                {
                  "kind": "Reference",
                  "text": "WriterContext",
                  "canonicalReference": "@gltf-transform/core!WriterContext:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "context",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "write"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@gltf-transform/extensions!Mapping:class",
          "docComment": "/**\n * # Mapping\n *\n * Maps {@link Variant}s to {@link Material}s. See {@link MaterialsVariants}.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class Mapping extends "
            },
            {
              "kind": "Reference",
              "text": "ExtensionProperty",
              "canonicalReference": "@gltf-transform/core!ExtensionProperty:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "IMapping",
              "canonicalReference": "@gltf-transform/extensions!~IMapping:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "dist/khr-materials-variants/mapping.d.ts",
          "releaseTag": "Public",
          "name": "Mapping",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!Mapping#addVariant:member(1)",
              "docComment": "/**\n * Adds a {@link Variant} to this mapping.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "addVariant(variant: "
                },
                {
                  "kind": "Reference",
                  "text": "Variant",
                  "canonicalReference": "@gltf-transform/extensions!Variant:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "variant",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "addVariant"
            },
            {
              "kind": "Property",
              "canonicalReference": "@gltf-transform/extensions!Mapping.EXTENSION_NAME:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static EXTENSION_NAME: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "EXTENSION_NAME",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@gltf-transform/extensions!Mapping#extensionName:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "extensionName: "
                },
                {
                  "kind": "Content",
                  "text": "typeof "
                },
                {
                  "kind": "Reference",
                  "text": "KHR_MATERIALS_VARIANTS",
                  "canonicalReference": "@gltf-transform/extensions!~KHR_MATERIALS_VARIANTS:var"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "extensionName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!Mapping#getDefaults:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected getDefaults(): "
                },
                {
                  "kind": "Reference",
                  "text": "Nullable",
                  "canonicalReference": "@gltf-transform/core!Nullable:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IMapping",
                  "canonicalReference": "@gltf-transform/extensions!~IMapping:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": true,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "getDefaults"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!Mapping#getMaterial:member(1)",
              "docComment": "/**\n * The {@link Material} designated for this {@link Primitive}, under the given variants.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getMaterial(): "
                },
                {
                  "kind": "Reference",
                  "text": "Material",
                  "canonicalReference": "@gltf-transform/core!Material:class"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "getMaterial"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!Mapping#init:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected init(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": true,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "init"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!Mapping#listVariants:member(1)",
              "docComment": "/**\n * Lists {@link Variant}s in this mapping.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "listVariants(): "
                },
                {
                  "kind": "Reference",
                  "text": "Variant",
                  "canonicalReference": "@gltf-transform/extensions!Variant:class"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "listVariants"
            },
            {
              "kind": "Property",
              "canonicalReference": "@gltf-transform/extensions!Mapping#parentTypes:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "parentTypes: "
                },
                {
                  "kind": "Content",
                  "text": "['MappingList']"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "parentTypes",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@gltf-transform/extensions!Mapping#propertyType:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "propertyType: "
                },
                {
                  "kind": "Content",
                  "text": "'Mapping'"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "propertyType",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!Mapping#removeVariant:member(1)",
              "docComment": "/**\n * Removes a {@link Variant} from this mapping.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "removeVariant(variant: "
                },
                {
                  "kind": "Reference",
                  "text": "Variant",
                  "canonicalReference": "@gltf-transform/extensions!Variant:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "variant",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "removeVariant"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!Mapping#setMaterial:member(1)",
              "docComment": "/**\n * The {@link Material} designated for this {@link Primitive}, under the given variants.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setMaterial(material: "
                },
                {
                  "kind": "Reference",
                  "text": "Material",
                  "canonicalReference": "@gltf-transform/core!Material:class"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "material",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "setMaterial"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@gltf-transform/extensions!MappingList:class",
          "docComment": "/**\n * # MappingList\n *\n * List of material variant {@link Mapping}s. See {@link MaterialsVariants}.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class MappingList extends "
            },
            {
              "kind": "Reference",
              "text": "ExtensionProperty",
              "canonicalReference": "@gltf-transform/core!ExtensionProperty:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "IMappingList",
              "canonicalReference": "@gltf-transform/extensions!~IMappingList:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "dist/khr-materials-variants/mapping-list.d.ts",
          "releaseTag": "Public",
          "name": "MappingList",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!MappingList#addMapping:member(1)",
              "docComment": "/**\n * Adds a {@link Mapping} to this mapping.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "addMapping(mapping: "
                },
                {
                  "kind": "Reference",
                  "text": "Mapping",
                  "canonicalReference": "@gltf-transform/extensions!Mapping:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "mapping",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "addMapping"
            },
            {
              "kind": "Property",
              "canonicalReference": "@gltf-transform/extensions!MappingList.EXTENSION_NAME:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static EXTENSION_NAME: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "EXTENSION_NAME",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@gltf-transform/extensions!MappingList#extensionName:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "extensionName: "
                },
                {
                  "kind": "Content",
                  "text": "typeof "
                },
                {
                  "kind": "Reference",
                  "text": "KHR_MATERIALS_VARIANTS",
                  "canonicalReference": "@gltf-transform/extensions!~KHR_MATERIALS_VARIANTS:var"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "extensionName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!MappingList#getDefaults:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected getDefaults(): "
                },
                {
                  "kind": "Reference",
                  "text": "Nullable",
                  "canonicalReference": "@gltf-transform/core!Nullable:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IMappingList",
                  "canonicalReference": "@gltf-transform/extensions!~IMappingList:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": true,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "getDefaults"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!MappingList#init:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected init(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": true,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "init"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!MappingList#listMappings:member(1)",
              "docComment": "/**\n * Lists {@link Mapping}s in this {@link Primitive}.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "listMappings(): "
                },
                {
                  "kind": "Reference",
                  "text": "Mapping",
                  "canonicalReference": "@gltf-transform/extensions!Mapping:class"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "listMappings"
            },
            {
              "kind": "Property",
              "canonicalReference": "@gltf-transform/extensions!MappingList#parentTypes:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "parentTypes: "
                },
                {
                  "kind": "Content",
                  "text": "["
                },
                {
                  "kind": "Reference",
                  "text": "PropertyType.PRIMITIVE",
                  "canonicalReference": "@gltf-transform/core!PropertyType.PRIMITIVE:member"
                },
                {
                  "kind": "Content",
                  "text": "]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "parentTypes",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@gltf-transform/extensions!MappingList#propertyType:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "propertyType: "
                },
                {
                  "kind": "Content",
                  "text": "'MappingList'"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "propertyType",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!MappingList#removeMapping:member(1)",
              "docComment": "/**\n * Removes a {@link Mapping} from the list for this {@link Primitive}.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "removeMapping(mapping: "
                },
                {
                  "kind": "Reference",
                  "text": "Mapping",
                  "canonicalReference": "@gltf-transform/extensions!Mapping:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "mapping",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "removeMapping"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@gltf-transform/extensions!MaterialsClearcoat:class",
          "docComment": "/**\n * # MaterialsClearcoat\n *\n * [KHR_materials_clearcoat](https://github.com/KhronosGroup/gltf/blob/main/extensions/2.0/Khronos/KHR_materials_clearcoat/) defines a clear coating on a glTF PBR material.\n *\n * ![Illustration](/media/extensions/khr-materials-clearcoat.png)\n *\n * > _**Figure:** Comparison of a carbon-fiber material without clearcoat (left) and with clearcoat > (right). Source: [Filament](https://google.github.io/filament/Materials.html)._\n *\n * A clear coat is a common technique used in Physically-Based Rendering for a protective layer applied to a base material. Commonly used to represent car paint, carbon fiber, or thin lacquers.\n *\n * Properties: - {@link Clearcoat}\n *\n * ### Example\n * ```typescript\n * import { MaterialsClearcoat, Clearcoat } from '@gltf-transform/extensions';\n *\n * // Create an Extension attached to the Document.\n * const clearcoatExtension = document.createExtension(MaterialsClearcoat);\n *\n * // Create Clearcoat property.\n * const clearcoat = clearcoatExtension.createClearcoat()\n * \t.setClearcoatFactor(1.0);\n *\n * // Assign to a Material.\n * material.setExtension('KHR_materials_clearcoat', clearcoat);\n * ```\n *\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class MaterialsClearcoat extends "
            },
            {
              "kind": "Reference",
              "text": "Extension",
              "canonicalReference": "@gltf-transform/core!Extension:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "dist/khr-materials-clearcoat/materials-clearcoat.d.ts",
          "releaseTag": "Public",
          "name": "MaterialsClearcoat",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!MaterialsClearcoat#createClearcoat:member(1)",
              "docComment": "/**\n * Creates a new Clearcoat property for use on a {@link Material}.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "createClearcoat(): "
                },
                {
                  "kind": "Reference",
                  "text": "Clearcoat",
                  "canonicalReference": "@gltf-transform/extensions!Clearcoat:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "createClearcoat"
            },
            {
              "kind": "Property",
              "canonicalReference": "@gltf-transform/extensions!MaterialsClearcoat.EXTENSION_NAME:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static readonly EXTENSION_NAME = "
                },
                {
                  "kind": "Content",
                  "text": "\"KHR_materials_clearcoat\""
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "EXTENSION_NAME",
              "propertyTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@gltf-transform/extensions!MaterialsClearcoat#extensionName:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly extensionName = "
                },
                {
                  "kind": "Content",
                  "text": "\"KHR_materials_clearcoat\""
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "extensionName",
              "propertyTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!MaterialsClearcoat#read:member(1)",
              "docComment": "/**\n * @hidden\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "read(context: "
                },
                {
                  "kind": "Reference",
                  "text": "ReaderContext",
                  "canonicalReference": "@gltf-transform/core!ReaderContext:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "context",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "read"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!MaterialsClearcoat#write:member(1)",
              "docComment": "/**\n * @hidden\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "write(context: "
                },
                {
                  "kind": "Reference",
                  "text": "WriterContext",
                  "canonicalReference": "@gltf-transform/core!WriterContext:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "context",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "write"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@gltf-transform/extensions!MaterialsEmissiveStrength:class",
          "docComment": "/**\n * # MaterialsEmissiveStrength\n *\n * [KHR_materials_emissive_strength](https://github.com/KhronosGroup/gltf/blob/main/extensions/2.0/Khronos/KHR_materials_emissive_strength/) defines emissive strength and enables high-dynamic-range (HDR) emissive materials.\n *\n * The core glTF 2.0 material model includes {@link Material.setEmissiveFactor `emissiveFactor`} and {@link Material.setEmissiveTexture `emissiveTexture`} to control the color and intensity of the light being emitted by the material, clamped to the range [0.0, 1.0]. However, in PBR environments with HDR reflections and lighting, stronger emission effects may be desirable.\n *\n * In this extension, a new {@link EmissiveStrength.setEmissiveStrength `emissiveStrength`} scalar factor is supplied, which governs the upper limit of emissive strength per material and may be given arbitrarily high values.\n *\n * For implementations where a physical light unit is needed, the units for the multiplicative product of the emissive texture and factor are candela per square meter (cd / m2), sometimes called _nits_. Many realtime rendering engines simplify this calculation by assuming that an emissive factor of 1.0 results in a fully exposed pixel.\n *\n * Properties: - {@link EmissiveStrength}\n *\n * ### Example\n * ```typescript\n * import { MaterialsEmissiveStrength, EmissiveStrength } from '@gltf-transform/extensions';\n *\n * // Create an Extension attached to the Document.\n * const emissiveStrengthExtension = document.createExtension(MaterialsEmissiveStrength);\n *\n * // Create EmissiveStrength property.\n * const emissiveStrength = emissiveStrengthExtension\n * \t.createEmissiveStrength().setEmissiveStrength(5.0);\n *\n * // Assign to a Material.\n * material.setExtension('KHR_materials_emissive_strength', emissiveStrength);\n * ```\n *\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class MaterialsEmissiveStrength extends "
            },
            {
              "kind": "Reference",
              "text": "Extension",
              "canonicalReference": "@gltf-transform/core!Extension:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "dist/khr-materials-emissive-strength/materials-emissive-strength.d.ts",
          "releaseTag": "Public",
          "name": "MaterialsEmissiveStrength",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!MaterialsEmissiveStrength#createEmissiveStrength:member(1)",
              "docComment": "/**\n * Creates a new EmissiveStrength property for use on a {@link Material}.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "createEmissiveStrength(): "
                },
                {
                  "kind": "Reference",
                  "text": "EmissiveStrength",
                  "canonicalReference": "@gltf-transform/extensions!EmissiveStrength:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "createEmissiveStrength"
            },
            {
              "kind": "Property",
              "canonicalReference": "@gltf-transform/extensions!MaterialsEmissiveStrength.EXTENSION_NAME:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static readonly EXTENSION_NAME = "
                },
                {
                  "kind": "Content",
                  "text": "\"KHR_materials_emissive_strength\""
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "EXTENSION_NAME",
              "propertyTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@gltf-transform/extensions!MaterialsEmissiveStrength#extensionName:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly extensionName = "
                },
                {
                  "kind": "Content",
                  "text": "\"KHR_materials_emissive_strength\""
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "extensionName",
              "propertyTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!MaterialsEmissiveStrength#read:member(1)",
              "docComment": "/**\n * @hidden\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "read(context: "
                },
                {
                  "kind": "Reference",
                  "text": "ReaderContext",
                  "canonicalReference": "@gltf-transform/core!ReaderContext:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "context",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "read"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!MaterialsEmissiveStrength#write:member(1)",
              "docComment": "/**\n * @hidden\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "write(context: "
                },
                {
                  "kind": "Reference",
                  "text": "WriterContext",
                  "canonicalReference": "@gltf-transform/core!WriterContext:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "context",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "write"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@gltf-transform/extensions!MaterialsIOR:class",
          "docComment": "/**\n * # MaterialsIOR\n *\n * [KHR_materials_ior](https://github.com/KhronosGroup/gltf/blob/main/extensions/2.0/Khronos/KHR_materials_ior/) defines index of refraction on a glTF PBR material.\n *\n * The dielectric BRDF of the metallic-roughness material in glTF uses a fixed value of 1.5 for the index of refraction. This is a good fit for many plastics and glass, but not for other materials like water or asphalt, sapphire or diamond. `KHR_materials_ior` allows users to set the index of refraction to a certain value.\n *\n * Properties: - {@link IOR}\n *\n * ### Example\n * ```typescript\n * import { MaterialsIOR, IOR } from '@gltf-transform/extensions';\n *\n * // Create an Extension attached to the Document.\n * const iorExtension = document.createExtension(MaterialsIOR);\n *\n * // Create IOR property.\n * const ior = iorExtension.createIOR().setIOR(1.0);\n *\n * // Assign to a Material.\n * material.setExtension('KHR_materials_ior', ior);\n * ```\n *\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class MaterialsIOR extends "
            },
            {
              "kind": "Reference",
              "text": "Extension",
              "canonicalReference": "@gltf-transform/core!Extension:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "dist/khr-materials-ior/materials-ior.d.ts",
          "releaseTag": "Public",
          "name": "MaterialsIOR",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!MaterialsIOR#createIOR:member(1)",
              "docComment": "/**\n * Creates a new IOR property for use on a {@link Material}.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "createIOR(): "
                },
                {
                  "kind": "Reference",
                  "text": "IOR",
                  "canonicalReference": "@gltf-transform/extensions!IOR:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "createIOR"
            },
            {
              "kind": "Property",
              "canonicalReference": "@gltf-transform/extensions!MaterialsIOR.EXTENSION_NAME:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static readonly EXTENSION_NAME = "
                },
                {
                  "kind": "Content",
                  "text": "\"KHR_materials_ior\""
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "EXTENSION_NAME",
              "propertyTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@gltf-transform/extensions!MaterialsIOR#extensionName:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly extensionName = "
                },
                {
                  "kind": "Content",
                  "text": "\"KHR_materials_ior\""
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "extensionName",
              "propertyTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!MaterialsIOR#read:member(1)",
              "docComment": "/**\n * @hidden\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "read(context: "
                },
                {
                  "kind": "Reference",
                  "text": "ReaderContext",
                  "canonicalReference": "@gltf-transform/core!ReaderContext:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "context",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "read"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!MaterialsIOR#write:member(1)",
              "docComment": "/**\n * @hidden\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "write(context: "
                },
                {
                  "kind": "Reference",
                  "text": "WriterContext",
                  "canonicalReference": "@gltf-transform/core!WriterContext:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "context",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "write"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@gltf-transform/extensions!MaterialsIridescence:class",
          "docComment": "/**\n * # MaterialsIridescence\n *\n * [`KHR_materials_iridescence`](https://github.com/KhronosGroup/gltf/blob/main/extensions/2.0/Khronos/KHR_materials_iridescence/) defines iridescence (thin film interference) on a PBR material.\n *\n * Iridescence describes an effect where hue varies depending on the viewing angle and illumination angle: A thin-film of a semi-transparent layer results in inter-reflections and due to thin-film interference, certain wavelengths get absorbed or amplified. Iridescence can be seen on soap bubbles, oil films, or on the wings of many insects. With this extension, thickness and index of refraction (IOR) of the thin-film can be specified, enabling iridescent materials.\n *\n * Properties: - {@link Iridescence}\n *\n * ### Example\n *\n * The `MaterialsIridescence` class provides a single {@link ExtensionProperty} type, `Iridescence`, which may be attached to any {@link Material} instance. For example:\n * ```typescript\n * import { MaterialsIridescence, Iridescence } from '@gltf-transform/extensions';\n *\n * // Create an Extension attached to the Document.\n * const iridescenceExtension = document.createExtension(MaterialsIridescence);\n *\n * // Create an Iridescence property.\n * const iridescence = iridescenceExtension.createIridescence()\n * \t.setIridescenceFactor(1.0)\n * \t.setIridescenceIOR(1.8);\n *\n * // Attach the property to a Material.\n * material.setExtension('KHR_materials_iridescence', iridescence);\n * ```\n *\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class MaterialsIridescence extends "
            },
            {
              "kind": "Reference",
              "text": "Extension",
              "canonicalReference": "@gltf-transform/core!Extension:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "dist/khr-materials-iridescence/materials-iridescence.d.ts",
          "releaseTag": "Public",
          "name": "MaterialsIridescence",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!MaterialsIridescence#createIridescence:member(1)",
              "docComment": "/**\n * Creates a new Iridescence property for use on a {@link Material}.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "createIridescence(): "
                },
                {
                  "kind": "Reference",
                  "text": "Iridescence",
                  "canonicalReference": "@gltf-transform/extensions!Iridescence:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "createIridescence"
            },
            {
              "kind": "Property",
              "canonicalReference": "@gltf-transform/extensions!MaterialsIridescence.EXTENSION_NAME:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static readonly EXTENSION_NAME = "
                },
                {
                  "kind": "Content",
                  "text": "\"KHR_materials_iridescence\""
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "EXTENSION_NAME",
              "propertyTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@gltf-transform/extensions!MaterialsIridescence#extensionName:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly extensionName = "
                },
                {
                  "kind": "Content",
                  "text": "\"KHR_materials_iridescence\""
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "extensionName",
              "propertyTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!MaterialsIridescence#read:member(1)",
              "docComment": "/**\n * @hidden\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "read(context: "
                },
                {
                  "kind": "Reference",
                  "text": "ReaderContext",
                  "canonicalReference": "@gltf-transform/core!ReaderContext:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "context",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "read"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!MaterialsIridescence#write:member(1)",
              "docComment": "/**\n * @hidden\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "write(context: "
                },
                {
                  "kind": "Reference",
                  "text": "WriterContext",
                  "canonicalReference": "@gltf-transform/core!WriterContext:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "context",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "write"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@gltf-transform/extensions!MaterialsPBRSpecularGlossiness:class",
          "docComment": "/**\n * # MaterialsPBRSpecularGlossiness\n *\n * [`KHR_materials_pbrSpecularGlossiness`](https://github.com/KhronosGroup/gltf/blob/main/extensions/2.0/Khronos/KHR_materials_pbrSpecularGlossiness/) converts a PBR material from the default metal/rough workflow to a spec/gloss workflow.\n *\n * > _**NOTICE:** The spec/gloss workflow does _not_ support other PBR extensions such as clearcoat, > transmission, IOR, etc. For the complete PBR feature set and specular data, use the > {@link MaterialsSpecular} extension instead, which provides specular data within a metal/rough > workflow._\n *\n * ![Illustration](/media/extensions/khr-material-pbr-specular-glossiness.png)\n *\n * > _**Figure:** Components of a PBR spec/gloss material. Source: Khronos Group._\n *\n * Properties: - {@link PBRSpecularGlossiness}\n *\n * ### Example\n * ```typescript\n * import { MaterialsPBRSpecularGlossiness } from '@gltf-transform/extensions';\n *\n * // Create an Extension attached to the Document.\n * const specGlossExtension = document.createExtension(MaterialsPBRSpecularGlossiness);\n *\n * // Create a PBRSpecularGlossiness property.\n * const specGloss = specGlossExtension.createPBRSpecularGlossiness()\n * \t.setSpecularFactor(1.0);\n *\n * // // Assign to a Material.\n * material.setExtension('KHR_materials_pbrSpecularGlossiness', specGloss);\n * ```\n *\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class MaterialsPBRSpecularGlossiness extends "
            },
            {
              "kind": "Reference",
              "text": "Extension",
              "canonicalReference": "@gltf-transform/core!Extension:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "dist/khr-materials-pbr-specular-glossiness/materials-pbr-specular-glossiness.d.ts",
          "releaseTag": "Public",
          "name": "MaterialsPBRSpecularGlossiness",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!MaterialsPBRSpecularGlossiness#createPBRSpecularGlossiness:member(1)",
              "docComment": "/**\n * Creates a new PBRSpecularGlossiness property for use on a {@link Material}.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "createPBRSpecularGlossiness(): "
                },
                {
                  "kind": "Reference",
                  "text": "PBRSpecularGlossiness",
                  "canonicalReference": "@gltf-transform/extensions!PBRSpecularGlossiness:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "createPBRSpecularGlossiness"
            },
            {
              "kind": "Property",
              "canonicalReference": "@gltf-transform/extensions!MaterialsPBRSpecularGlossiness.EXTENSION_NAME:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static readonly EXTENSION_NAME = "
                },
                {
                  "kind": "Content",
                  "text": "\"KHR_materials_pbrSpecularGlossiness\""
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "EXTENSION_NAME",
              "propertyTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@gltf-transform/extensions!MaterialsPBRSpecularGlossiness#extensionName:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly extensionName = "
                },
                {
                  "kind": "Content",
                  "text": "\"KHR_materials_pbrSpecularGlossiness\""
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "extensionName",
              "propertyTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!MaterialsPBRSpecularGlossiness#read:member(1)",
              "docComment": "/**\n * @hidden\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "read(context: "
                },
                {
                  "kind": "Reference",
                  "text": "ReaderContext",
                  "canonicalReference": "@gltf-transform/core!ReaderContext:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "context",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "read"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!MaterialsPBRSpecularGlossiness#write:member(1)",
              "docComment": "/**\n * @hidden\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "write(context: "
                },
                {
                  "kind": "Reference",
                  "text": "WriterContext",
                  "canonicalReference": "@gltf-transform/core!WriterContext:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "context",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "write"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@gltf-transform/extensions!MaterialsSheen:class",
          "docComment": "/**\n * # MaterialsSheen\n *\n * [`KHR_materials_sheen`](https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_sheen/) defines a velvet-like sheen layered on a glTF PBR material.\n *\n * ![Illustration](/media/extensions/khr-materials-sheen.png)\n *\n * > _**Figure:** A cushion, showing high material roughness and low sheen roughness. Soft > highlights at edges of the material show backscattering from microfibers. Source: Khronos > Group._\n *\n * A sheen layer is a common technique used in Physically-Based Rendering to represent cloth and fabric materials.\n *\n * Properties: - {@link Sheen}\n *\n * ### Example\n *\n * The `MaterialsSheen` class provides a single {@link ExtensionProperty} type, `Sheen`, which may be attached to any {@link Material} instance. For example:\n * ```typescript\n * import { MaterialsSheen, Sheen } from '@gltf-transform/extensions';\n *\n * // Create an Extension attached to the Document.\n * const sheenExtension = document.createExtension(MaterialsSheen);\n *\n * // Create a Sheen property.\n * const sheen = sheenExtension.createSheen()\n * \t.setSheenColorFactor([1.0, 1.0, 1.0]);\n *\n * // Attach the property to a Material.\n * material.setExtension('KHR_materials_sheen', sheen);\n * ```\n *\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class MaterialsSheen extends "
            },
            {
              "kind": "Reference",
              "text": "Extension",
              "canonicalReference": "@gltf-transform/core!Extension:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "dist/khr-materials-sheen/materials-sheen.d.ts",
          "releaseTag": "Public",
          "name": "MaterialsSheen",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!MaterialsSheen#createSheen:member(1)",
              "docComment": "/**\n * Creates a new Sheen property for use on a {@link Material}.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "createSheen(): "
                },
                {
                  "kind": "Reference",
                  "text": "Sheen",
                  "canonicalReference": "@gltf-transform/extensions!Sheen:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "createSheen"
            },
            {
              "kind": "Property",
              "canonicalReference": "@gltf-transform/extensions!MaterialsSheen.EXTENSION_NAME:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static readonly EXTENSION_NAME = "
                },
                {
                  "kind": "Content",
                  "text": "\"KHR_materials_sheen\""
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "EXTENSION_NAME",
              "propertyTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@gltf-transform/extensions!MaterialsSheen#extensionName:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly extensionName = "
                },
                {
                  "kind": "Content",
                  "text": "\"KHR_materials_sheen\""
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "extensionName",
              "propertyTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!MaterialsSheen#read:member(1)",
              "docComment": "/**\n * @hidden\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "read(context: "
                },
                {
                  "kind": "Reference",
                  "text": "ReaderContext",
                  "canonicalReference": "@gltf-transform/core!ReaderContext:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "context",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "read"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!MaterialsSheen#write:member(1)",
              "docComment": "/**\n * @hidden\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "write(context: "
                },
                {
                  "kind": "Reference",
                  "text": "WriterContext",
                  "canonicalReference": "@gltf-transform/core!WriterContext:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "context",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "write"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@gltf-transform/extensions!MaterialsSpecular:class",
          "docComment": "/**\n * # MaterialsSpecular\n *\n * [`KHR_materials_specular`](https://github.com/KhronosGroup/gltf/blob/main/extensions/2.0/Khronos/KHR_materials_specular/) adjusts the strength of the specular reflection in the dielectric BRDF.\n *\n * MaterialsSpecular is a better alternative to the older {@link MaterialsPBRSpecularGlossiness KHR_materials_pbrSpecularGlossiness} extension, and provides specular information while remaining within a metal/rough PBR workflow. A value of zero disables the specular reflection, resulting in a pure diffuse material.\n *\n * Properties: - {@link Specular}\n *\n * ### Example\n *\n * The `MaterialsSpecular` class provides a single {@link ExtensionProperty} type, `Specular`, which may be attached to any {@link Material} instance. For example:\n * ```typescript\n * import { MaterialsSpecular, Specular } from '@gltf-transform/extensions';\n *\n * // Create an Extension attached to the Document.\n * const specularExtension = document.createExtension(MaterialsSpecular);\n *\n * // Create a Specular property.\n * const specular = specularExtension.createSpecular()\n * \t.setSpecularFactor(1.0);\n *\n * // Attach the property to a Material.\n * material.setExtension('KHR_materials_specular', specular);\n * ```\n *\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class MaterialsSpecular extends "
            },
            {
              "kind": "Reference",
              "text": "Extension",
              "canonicalReference": "@gltf-transform/core!Extension:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "dist/khr-materials-specular/materials-specular.d.ts",
          "releaseTag": "Public",
          "name": "MaterialsSpecular",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!MaterialsSpecular#createSpecular:member(1)",
              "docComment": "/**\n * Creates a new Specular property for use on a {@link Material}.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "createSpecular(): "
                },
                {
                  "kind": "Reference",
                  "text": "Specular",
                  "canonicalReference": "@gltf-transform/extensions!Specular:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "createSpecular"
            },
            {
              "kind": "Property",
              "canonicalReference": "@gltf-transform/extensions!MaterialsSpecular.EXTENSION_NAME:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static readonly EXTENSION_NAME = "
                },
                {
                  "kind": "Content",
                  "text": "\"KHR_materials_specular\""
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "EXTENSION_NAME",
              "propertyTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@gltf-transform/extensions!MaterialsSpecular#extensionName:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly extensionName = "
                },
                {
                  "kind": "Content",
                  "text": "\"KHR_materials_specular\""
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "extensionName",
              "propertyTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!MaterialsSpecular#read:member(1)",
              "docComment": "/**\n * @hidden\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "read(context: "
                },
                {
                  "kind": "Reference",
                  "text": "ReaderContext",
                  "canonicalReference": "@gltf-transform/core!ReaderContext:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "context",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "read"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!MaterialsSpecular#write:member(1)",
              "docComment": "/**\n * @hidden\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "write(context: "
                },
                {
                  "kind": "Reference",
                  "text": "WriterContext",
                  "canonicalReference": "@gltf-transform/core!WriterContext:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "context",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "write"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@gltf-transform/extensions!MaterialsTransmission:class",
          "docComment": "/**\n * # MaterialsTransmission\n *\n * [`KHR_materials_transmission`](https://github.com/KhronosGroup/gltf/blob/main/extensions/2.0/Khronos/KHR_materials_transmission/) provides a common type of optical transparency: infinitely-thin materials with no refraction, scattering, or dispersion.\n *\n * While default PBR materials using alpha blending become invisible as their opacity approaches zero, a transmissive material continues to reflect light in a glass-like manner, even at low transmission values. When combined with {@link MaterialsVolume}, transmission may be used for thicker materials and refractive effects.\n *\n * Properties: - {@link Transmission}\n *\n * ### Example\n *\n * The `MaterialsTransmission` class provides a single {@link ExtensionProperty} type, `Transmission`, which may be attached to any {@link Material} instance. For example:\n * ```typescript\n * import { MaterialsTransmission, Transmission } from '@gltf-transform/extensions';\n *\n * // Create an Extension attached to the Document.\n * const transmissionExtension = document.createExtension(MaterialsTransmission);\n *\n * // Create a Transmission property.\n * const transmission = transmissionExtension.createTransmission()\n * \t.setTransmissionFactor(1.0);\n *\n * // Attach the property to a Material.\n * material.setExtension('KHR_materials_transmission', transmission);\n * ```\n *\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class MaterialsTransmission extends "
            },
            {
              "kind": "Reference",
              "text": "Extension",
              "canonicalReference": "@gltf-transform/core!Extension:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "dist/khr-materials-transmission/materials-transmission.d.ts",
          "releaseTag": "Public",
          "name": "MaterialsTransmission",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!MaterialsTransmission#createTransmission:member(1)",
              "docComment": "/**\n * Creates a new Transmission property for use on a {@link Material}.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "createTransmission(): "
                },
                {
                  "kind": "Reference",
                  "text": "Transmission",
                  "canonicalReference": "@gltf-transform/extensions!Transmission:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "createTransmission"
            },
            {
              "kind": "Property",
              "canonicalReference": "@gltf-transform/extensions!MaterialsTransmission.EXTENSION_NAME:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static readonly EXTENSION_NAME = "
                },
                {
                  "kind": "Content",
                  "text": "\"KHR_materials_transmission\""
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "EXTENSION_NAME",
              "propertyTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@gltf-transform/extensions!MaterialsTransmission#extensionName:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly extensionName = "
                },
                {
                  "kind": "Content",
                  "text": "\"KHR_materials_transmission\""
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "extensionName",
              "propertyTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!MaterialsTransmission#read:member(1)",
              "docComment": "/**\n * @hidden\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "read(context: "
                },
                {
                  "kind": "Reference",
                  "text": "ReaderContext",
                  "canonicalReference": "@gltf-transform/core!ReaderContext:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "context",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "read"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!MaterialsTransmission#write:member(1)",
              "docComment": "/**\n * @hidden\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "write(context: "
                },
                {
                  "kind": "Reference",
                  "text": "WriterContext",
                  "canonicalReference": "@gltf-transform/core!WriterContext:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "context",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "write"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@gltf-transform/extensions!MaterialsUnlit:class",
          "docComment": "/**\n * # MaterialsUnlit\n *\n * [`KHR_materials_unlit`](https://github.com/KhronosGroup/gltf/blob/main/extensions/2.0/Khronos/KHR_materials_unlit/) defines an unlit shading model for use in glTF 2.0 materials.\n *\n * ![Illustration](/media/extensions/khr-materials-unlit.png)\n *\n * > _**Figure:** Unlit materials are useful for flat shading, stylized effects, and for improving > performance on mobile devices. Source: [Model by Hayden VanEarden](https://sketchfab.com/3d-models/summertime-kirby-c5711316103a4d67a62c34cfe8710938)._\n *\n * Unlit (also \"Shadeless\" or \"Constant\") materials provide a simple alternative to the Physically Based Rendering (PBR) shading models provided by the core specification. Unlit materials are often useful for cheaper rendering on performance-contrained devices, e.g. mobile phones. Additionally, unlit materials can be very useful in achieving stylized, non-photo-realistic effects like hand painted illustrative styles or baked toon shaders.\n *\n * Properties: - {@link Unlit}\n *\n * ### Example\n *\n * The `MaterialsUnlit` class provides a single {@link ExtensionProperty} type, `Unlit`, which may be attached to any {@link Material} instance. For example:\n * ```typescript\n * import { MaterialsUnlit, Unlit } from '@gltf-transform/extensions';\n *\n * // Create an Extension attached to the Document.\n * const unlitExtension = document.createExtension(MaterialsUnlit);\n *\n * // Create an Unlit property.\n * const unlit = unlitExtension.createUnlit();\n *\n * // Attach the property to a Material.\n * material.setExtension('KHR_materials_unlit', unlit);\n * ```\n *\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class MaterialsUnlit extends "
            },
            {
              "kind": "Reference",
              "text": "Extension",
              "canonicalReference": "@gltf-transform/core!Extension:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "dist/khr-materials-unlit/materials-unlit.d.ts",
          "releaseTag": "Public",
          "name": "MaterialsUnlit",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!MaterialsUnlit#createUnlit:member(1)",
              "docComment": "/**\n * Creates a new Unlit property for use on a {@link Material}.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "createUnlit(): "
                },
                {
                  "kind": "Reference",
                  "text": "Unlit",
                  "canonicalReference": "@gltf-transform/extensions!Unlit:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "createUnlit"
            },
            {
              "kind": "Property",
              "canonicalReference": "@gltf-transform/extensions!MaterialsUnlit.EXTENSION_NAME:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static readonly EXTENSION_NAME = "
                },
                {
                  "kind": "Content",
                  "text": "\"KHR_materials_unlit\""
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "EXTENSION_NAME",
              "propertyTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@gltf-transform/extensions!MaterialsUnlit#extensionName:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly extensionName = "
                },
                {
                  "kind": "Content",
                  "text": "\"KHR_materials_unlit\""
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "extensionName",
              "propertyTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!MaterialsUnlit#read:member(1)",
              "docComment": "/**\n * @hidden\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "read(context: "
                },
                {
                  "kind": "Reference",
                  "text": "ReaderContext",
                  "canonicalReference": "@gltf-transform/core!ReaderContext:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "context",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "read"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!MaterialsUnlit#write:member(1)",
              "docComment": "/**\n * @hidden\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "write(context: "
                },
                {
                  "kind": "Reference",
                  "text": "WriterContext",
                  "canonicalReference": "@gltf-transform/core!WriterContext:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "context",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "write"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@gltf-transform/extensions!MaterialsVariants:class",
          "docComment": "/**\n * # MaterialsVariants\n *\n * [`KHR_materials_variants`](https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_variants/) defines alternate {@link Material} states for any {@link Primitive} in the scene.\n *\n * ![Illustration](/media/extensions/khr-materials-variants.png)\n *\n * > _**Figure:** A sneaker, in three material variants. Source: Khronos Group._\n *\n * Uses include product configurators, night/day states, healthy/damaged states, etc. The `MaterialsVariants` class provides three {@link ExtensionProperty} types: `Variant`, `Mapping`, and `MappingList`. When attached to {@link Primitive} properties, these offer flexible ways of defining the variants available to an application. Triggering a variant is out of scope of this extension, but could be handled in the application with a UI dropdown, particular game states, and so on.\n *\n * Mesh geometry cannot be changed by this extension, although another extension (tentative: `KHR_mesh_variants`) is under consideration by the Khronos Group, for that purpose.\n *\n * Properties: - {@link Variant} - {@link Mapping} - {@link MappingList}\n *\n * ### Example\n * ```typescript\n * import { MaterialsVariants } from '@gltf-transform/extensions';\n *\n * // Create an Extension attached to the Document.\n * const variantExtension = document.createExtension(MaterialsVariants);\n *\n * // Create some Variant states.\n * const healthyVariant = variantExtension.createVariant('Healthy');\n * const damagedVariant = variantExtension.createVariant('Damaged');\n *\n * // Create mappings from a Variant state to a Material.\n * const healthyMapping = variantExtension.createMapping()\n * \t.addVariant(healthyVariant)\n * \t.setMaterial(healthyMat);\n * const damagedMapping = variantExtension.createMapping()\n * \t.addVariant(damagedVariant)\n * \t.setMaterial(damagedMat);\n *\n * // Attach the mappings to a Primitive.\n * primitive.setExtension(\n * \t'KHR_materials_variants',\n * \tvariantExtension.createMappingList()\n * \t\t.addMapping(healthyMapping)\n * \t\t.addMapping(damagedMapping)\n * );\n * ```\n *\n * A few notes about this extension:\n *\n * 1. Viewers that don't recognized this extension will show the default material for each primitive instead, so assign that material accordingly. This material can be — but doesn't have to be — associated with one of the available variants. 2. Mappings can list multiple Variants. In that case, the first Mapping containing an active Variant will be chosen by the viewer. 3. Variant names are how these states are identified, so choose informative names. 4. When writing the file to an unpacked `.gltf`, instead of an embedded `.glb`, viewers will have the option of downloading only textures associated with the default state, and lazy-loading any textures for inactive Variants only when they are needed.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class MaterialsVariants extends "
            },
            {
              "kind": "Reference",
              "text": "Extension",
              "canonicalReference": "@gltf-transform/core!Extension:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "dist/khr-materials-variants/materials-variants.d.ts",
          "releaseTag": "Public",
          "name": "MaterialsVariants",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!MaterialsVariants#createMapping:member(1)",
              "docComment": "/**\n * Creates a new Mapping property.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "createMapping(): "
                },
                {
                  "kind": "Reference",
                  "text": "Mapping",
                  "canonicalReference": "@gltf-transform/extensions!Mapping:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "createMapping"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!MaterialsVariants#createMappingList:member(1)",
              "docComment": "/**\n * Creates a new MappingList property.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "createMappingList(): "
                },
                {
                  "kind": "Reference",
                  "text": "MappingList",
                  "canonicalReference": "@gltf-transform/extensions!MappingList:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "createMappingList"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!MaterialsVariants#createVariant:member(1)",
              "docComment": "/**\n * Creates a new Variant property.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "createVariant(name?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Variant",
                  "canonicalReference": "@gltf-transform/extensions!Variant:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "name",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "name": "createVariant"
            },
            {
              "kind": "Property",
              "canonicalReference": "@gltf-transform/extensions!MaterialsVariants.EXTENSION_NAME:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static readonly EXTENSION_NAME = "
                },
                {
                  "kind": "Content",
                  "text": "\"KHR_materials_variants\""
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "EXTENSION_NAME",
              "propertyTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@gltf-transform/extensions!MaterialsVariants#extensionName:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly extensionName = "
                },
                {
                  "kind": "Content",
                  "text": "\"KHR_materials_variants\""
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "extensionName",
              "propertyTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!MaterialsVariants#listVariants:member(1)",
              "docComment": "/**\n * Lists all Variants on the current Document.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "listVariants(): "
                },
                {
                  "kind": "Reference",
                  "text": "Variant",
                  "canonicalReference": "@gltf-transform/extensions!Variant:class"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "listVariants"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!MaterialsVariants#read:member(1)",
              "docComment": "/**\n * @hidden\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "read(context: "
                },
                {
                  "kind": "Reference",
                  "text": "ReaderContext",
                  "canonicalReference": "@gltf-transform/core!ReaderContext:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "context",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "read"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!MaterialsVariants#write:member(1)",
              "docComment": "/**\n * @hidden\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "write(context: "
                },
                {
                  "kind": "Reference",
                  "text": "WriterContext",
                  "canonicalReference": "@gltf-transform/core!WriterContext:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "context",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "write"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@gltf-transform/extensions!MaterialsVolume:class",
          "docComment": "/**\n * # MaterialsVolume\n *\n * [KHR_materials_volume](https://github.com/KhronosGroup/gltf/blob/main/extensions/2.0/Khronos/KHR_materials_volume/) adds refraction, absorption, or scattering to a glTF PBR material already using transmission or translucency.\n *\n * ![Illustration](/media/extensions/khr-materials-volume.png)\n *\n * > _**Figure:** Base color changes the amount of light passing through the volume boundary > (left). The overall color of the object is the same everywhere, as if the object is covered > with a colored, transparent foil. Absorption changes the amount of light traveling through the > volume (right). The overall color depends on the distance the light traveled through it; at > small distances (tail of the dragon) less light is absorbed and the color is brighter than at > large distances. Source: Khronos Group._\n *\n * By default, a glTF 2.0 material describes the scattering properties of a surface enclosing an infinitely thin volume. The surface defined by the mesh represents a thin wall. The volume extension makes it possible to turn the surface into an interface between volumes. The mesh to which the material is attached defines the boundaries of an homogeneous medium and therefore must be manifold. Volumes provide effects like refraction, absorption and scattering. Scattering effects will require future (TBD) extensions.\n *\n * The volume extension must be combined with {@link MaterialsTransmission} or `KHR_materials_translucency` in order to define entry of light into the volume.\n *\n * Properties: - {@link Volume}\n *\n * ### Example\n *\n * The `MaterialsVolume` class provides a single {@link ExtensionProperty} type, `Volume`, which may be attached to any {@link Material} instance. For example:\n * ```typescript\n * import { MaterialsVolume, Volume } from '@gltf-transform/extensions';\n *\n * // Create an Extension attached to the Document.\n * const volumeExtension = document.createExtension(MaterialsVolume);\n *\n * // Create a Volume property.\n * const volume = volumeExtension.createVolume()\n * \t.setThicknessFactor(1.0)\n * \t.setThicknessTexture(texture)\n * \t.setAttenuationDistance(1.0)\n * \t.setAttenuationColorHex(0xFFEEEE);\n *\n * // Attach the property to a Material.\n * material.setExtension('KHR_materials_volume', volume);\n * ```\n *\n * A thickness texture is required in most realtime renderers, and can be baked in software such as Blender or Substance Painter. When `thicknessFactor = 0`, all volumetric effects are disabled.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class MaterialsVolume extends "
            },
            {
              "kind": "Reference",
              "text": "Extension",
              "canonicalReference": "@gltf-transform/core!Extension:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "dist/khr-materials-volume/materials-volume.d.ts",
          "releaseTag": "Public",
          "name": "MaterialsVolume",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!MaterialsVolume#createVolume:member(1)",
              "docComment": "/**\n * Creates a new Volume property for use on a {@link Material}.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "createVolume(): "
                },
                {
                  "kind": "Reference",
                  "text": "Volume",
                  "canonicalReference": "@gltf-transform/extensions!Volume:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "createVolume"
            },
            {
              "kind": "Property",
              "canonicalReference": "@gltf-transform/extensions!MaterialsVolume.EXTENSION_NAME:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static readonly EXTENSION_NAME = "
                },
                {
                  "kind": "Content",
                  "text": "\"KHR_materials_volume\""
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "EXTENSION_NAME",
              "propertyTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@gltf-transform/extensions!MaterialsVolume#extensionName:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly extensionName = "
                },
                {
                  "kind": "Content",
                  "text": "\"KHR_materials_volume\""
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "extensionName",
              "propertyTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!MaterialsVolume#read:member(1)",
              "docComment": "/**\n * @hidden\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "read(context: "
                },
                {
                  "kind": "Reference",
                  "text": "ReaderContext",
                  "canonicalReference": "@gltf-transform/core!ReaderContext:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "context",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "read"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!MaterialsVolume#write:member(1)",
              "docComment": "/**\n * @hidden\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "write(context: "
                },
                {
                  "kind": "Reference",
                  "text": "WriterContext",
                  "canonicalReference": "@gltf-transform/core!WriterContext:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "context",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "write"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@gltf-transform/extensions!MeshGPUInstancing:class",
          "docComment": "/**\n * # MeshGPUInstancing\n *\n * [`EXT_mesh_gpu_instancing`](https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Vendor/EXT_mesh_gpu_instancing/) prepares mesh data for efficient GPU instancing.\n *\n * [[include:VENDOR_EXTENSIONS_NOTE.md]]\n *\n * GPU instancing allows engines to render many copies of a single mesh at once using a small number of draw calls. Instancing is particularly useful for things like trees, grass, road signs, etc. Keep in mind that predefined batches, as used in this extension, may prevent frustum culling within a batch. Dividing batches into collocated cells may be preferable to using a single large batch.\n *\n * > _**NOTICE:** While this extension stores mesh data optimized for GPU instancing, it > is important to note that (1) GPU instancing and other optimizations are possible — and > encouraged — even without this extension, and (2) other common meanings of the term > \"instancing\" exist, distinct from this extension. See > [Appendix: Motivation and Purpose](https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Vendor/EXT_mesh_gpu_instancing#appendix-motivation-and-purpose) > of the `EXT_mesh_gpu_instancing` specification._\n *\n * Properties: - {@link InstancedMesh}\n *\n * ### Example\n *\n * The `MeshGPUInstancing` class provides a single {@link ExtensionProperty} type, `InstancedMesh`, which may be attached to any {@link Node} instance. For example:\n * ```typescript\n * import { MeshGPUInstancing } from '@gltf-transform/extensions';\n *\n * // Create standard mesh, node, and scene hierarchy.\n * // ...\n *\n * // Assign positions for each instance.\n * const batchPositions = doc.createAccessor('instance_positions')\n * \t.setArray(new Float32Array([\n * \t\t0, 0, 0,\n * \t\t1, 0, 0,\n * \t\t2, 0, 0,\n * \t]))\n * \t.setType(Accessor.Type.VEC3)\n * \t.setBuffer(buffer);\n *\n * // Assign IDs for each instance.\n * const batchIDs = doc.createAccessor('instance_ids')\n * \t.setArray(new Uint8Array([0, 1, 2]))\n * \t.setType(Accessor.Type.SCALAR)\n * \t.setBuffer(buffer);\n *\n * // Create an Extension attached to the Document.\n * const batchExtension = document.createExtension(MeshGPUInstancing)\n * \t.setRequired(true);\n * const batch = batchExtension.createInstancedMesh()\n * \t.setAttribute('TRANSLATION', batchPositions)\n * \t.setAttribute('_ID', batchIDs);\n *\n * node\n * \t.setMesh(mesh)\n * \t.setExtension('EXT_mesh_gpu_instancing', batch);\n * ```\n *\n * Standard instance attributes are `TRANSLATION`, `ROTATION`, and `SCALE`, and support the accessor types allowed by the extension specification. Custom instance attributes are allowed, and should be prefixed with an underscore (`_*`).\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class MeshGPUInstancing extends "
            },
            {
              "kind": "Reference",
              "text": "Extension",
              "canonicalReference": "@gltf-transform/core!Extension:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "dist/ext-mesh-gpu-instancing/mesh-gpu-instancing.d.ts",
          "releaseTag": "Public",
          "name": "MeshGPUInstancing",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!MeshGPUInstancing#createInstancedMesh:member(1)",
              "docComment": "/**\n * Creates a new InstancedMesh property for use on a {@link Node}.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "createInstancedMesh(): "
                },
                {
                  "kind": "Reference",
                  "text": "InstancedMesh",
                  "canonicalReference": "@gltf-transform/extensions!InstancedMesh:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "createInstancedMesh"
            },
            {
              "kind": "Property",
              "canonicalReference": "@gltf-transform/extensions!MeshGPUInstancing.EXTENSION_NAME:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static readonly EXTENSION_NAME = "
                },
                {
                  "kind": "Content",
                  "text": "\"EXT_mesh_gpu_instancing\""
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "EXTENSION_NAME",
              "propertyTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@gltf-transform/extensions!MeshGPUInstancing#extensionName:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly extensionName = "
                },
                {
                  "kind": "Content",
                  "text": "\"EXT_mesh_gpu_instancing\""
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "extensionName",
              "propertyTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!MeshGPUInstancing#prewrite:member(1)",
              "docComment": "/**\n * @hidden\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "prewrite(context: "
                },
                {
                  "kind": "Reference",
                  "text": "WriterContext",
                  "canonicalReference": "@gltf-transform/core!WriterContext:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "context",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "prewrite"
            },
            {
              "kind": "Property",
              "canonicalReference": "@gltf-transform/extensions!MeshGPUInstancing#prewriteTypes:member",
              "docComment": "/**\n * @hidden\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly prewriteTypes: "
                },
                {
                  "kind": "Reference",
                  "text": "PropertyType",
                  "canonicalReference": "@gltf-transform/core!PropertyType:enum"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "prewriteTypes",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@gltf-transform/extensions!MeshGPUInstancing#provideTypes:member",
              "docComment": "/**\n * @hidden\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly provideTypes: "
                },
                {
                  "kind": "Reference",
                  "text": "PropertyType",
                  "canonicalReference": "@gltf-transform/core!PropertyType:enum"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "provideTypes",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!MeshGPUInstancing#read:member(1)",
              "docComment": "/**\n * @hidden\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "read(context: "
                },
                {
                  "kind": "Reference",
                  "text": "ReaderContext",
                  "canonicalReference": "@gltf-transform/core!ReaderContext:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "context",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "read"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!MeshGPUInstancing#write:member(1)",
              "docComment": "/**\n * @hidden\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "write(context: "
                },
                {
                  "kind": "Reference",
                  "text": "WriterContext",
                  "canonicalReference": "@gltf-transform/core!WriterContext:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "context",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "write"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@gltf-transform/extensions!MeshoptCompression:class",
          "docComment": "/**\n * # MeshoptCompression\n *\n * [`EXT_meshopt_compression`](https://github.com/KhronosGroup/gltf/blob/main/extensions/2.0/Vendor/EXT_meshopt_compression/) provides compression and fast decoding for geometry, morph targets, and animations.\n *\n * [[include:VENDOR_EXTENSIONS_NOTE.md]]\n *\n * Meshopt compression (based on the [meshoptimizer](https://github.com/zeux/meshoptimizer) library) offers a lightweight decoder with very fast runtime decompression, and is appropriate for models of any size. Meshopt can reduce the transmission sizes of geometry, morph targets, animation, and other numeric data stored in buffer views. When textures are large, other complementary compression methods should be used as well.\n *\n * For the full benefits of meshopt compression, **apply gzip, brotli, or another lossless compression method** to the resulting .glb, .gltf, or .bin files. Meshopt specifically pre-optimizes assets for this purpose — without this secondary compression, the size reduction is considerably less.\n *\n * Be aware that decompression happens before uploading to the GPU. While Meshopt decoding is considerably faster than Draco decoding, neither compression method will improve runtime performance directly. To improve framerate, you'll need to simplify the geometry by reducing vertex count or draw calls — not just compress it. Finally, be aware that Meshopt compression is lossy: repeatedly compressing and decompressing a model in a pipeline will lose precision, so compression should generally be the last stage of an art workflow, and uncompressed original files should be kept.\n *\n * The meshoptimizer library ([github](https://github.com/zeux/meshoptimizer/tree/master/js), [npm](https://www.npmjs.com/package/meshoptimizer)) is a required dependency for reading or writing files, and must be provided by the application. Compression may alternatively be applied with the [gltfpack](https://github.com/zeux/meshoptimizer/tree/master/gltf) tool.\n *\n * ### Example\n * ```typescript\n * import { NodeIO } from '@gltf-transform/core';\n * import { reorder, quantize } from '@gltf-transform/functions';\n * import { MeshoptCompression } from '@gltf-transform/extensions';\n * import { MeshoptDecoder, MeshoptEncoder } from 'meshoptimizer';\n *\n * await MeshoptDecoder.ready;\n * await MeshoptEncoder.ready;\n *\n * const io = new NodeIO()\n * \t.registerExtensions([MeshoptCompression])\n * \t.registerDependencies({\n * \t\t'meshopt.decoder': MeshoptDecoder,\n * \t\t'meshopt.encoder': MeshoptEncoder,\n * \t});\n *\n * // Read and decode.\n * const document = await io.read('compressed.glb');\n *\n * // Write and encode. (Medium, -c)\n * await document.transform(\n * \treorder({encoder: MeshoptEncoder}),\n * \tquantize()\n * );\n * document.createExtension(MeshoptCompression)\n * \t.setRequired(true)\n * \t.setEncoderOptions({ method: MeshoptCompression.EncoderMethod.QUANTIZE });\n * await io.write('compressed-medium.glb', document);\n *\n * // Write and encode. (High, -cc)\n * await document.transform(\n * \treorder({encoder: MeshoptEncoder}),\n * \tquantize({pattern: /^(POSITION|TEXCOORD|JOINTS|WEIGHTS)(_\\d+)?$/}),\n * );\n * document.createExtension(MeshoptCompression)\n * \t.setRequired(true)\n * \t.setEncoderOptions({ method: MeshoptCompression.EncoderMethod.FILTER });\n * await io.write('compressed-high.glb', document);\n * ```\n *\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class MeshoptCompression extends "
            },
            {
              "kind": "Reference",
              "text": "Extension",
              "canonicalReference": "@gltf-transform/core!Extension:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "dist/ext-meshopt-compression/meshopt-compression.d.ts",
          "releaseTag": "Public",
          "name": "MeshoptCompression",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "@gltf-transform/extensions!MeshoptCompression.EncoderMethod:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static readonly EncoderMethod: "
                },
                {
                  "kind": "Content",
                  "text": "typeof "
                },
                {
                  "kind": "Reference",
                  "text": "EncoderMethod",
                  "canonicalReference": "@gltf-transform/extensions!~EncoderMethod_2:enum"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "EncoderMethod",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": true,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@gltf-transform/extensions!MeshoptCompression.EXTENSION_NAME:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static readonly EXTENSION_NAME = "
                },
                {
                  "kind": "Content",
                  "text": "\"EXT_meshopt_compression\""
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "EXTENSION_NAME",
              "propertyTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@gltf-transform/extensions!MeshoptCompression#extensionName:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly extensionName = "
                },
                {
                  "kind": "Content",
                  "text": "\"EXT_meshopt_compression\""
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "extensionName",
              "propertyTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!MeshoptCompression#install:member(1)",
              "docComment": "/**\n * @hidden\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "install(key: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", dependency: "
                },
                {
                  "kind": "Content",
                  "text": "unknown"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "key",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "dependency",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "install"
            },
            {
              "kind": "Property",
              "canonicalReference": "@gltf-transform/extensions!MeshoptCompression#prereadTypes:member",
              "docComment": "/**\n * @hidden\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly prereadTypes: "
                },
                {
                  "kind": "Reference",
                  "text": "PropertyType",
                  "canonicalReference": "@gltf-transform/core!PropertyType:enum"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "prereadTypes",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@gltf-transform/extensions!MeshoptCompression#prewriteTypes:member",
              "docComment": "/**\n * @hidden\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly prewriteTypes: "
                },
                {
                  "kind": "Reference",
                  "text": "PropertyType",
                  "canonicalReference": "@gltf-transform/core!PropertyType:enum"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "prewriteTypes",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!MeshoptCompression#read:member(1)",
              "docComment": "/**\n * @hidden Removes Fallback buffers, if extension is required.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "read(_context: "
                },
                {
                  "kind": "Reference",
                  "text": "ReaderContext",
                  "canonicalReference": "@gltf-transform/core!ReaderContext:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "_context",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "read"
            },
            {
              "kind": "Property",
              "canonicalReference": "@gltf-transform/extensions!MeshoptCompression#readDependencies:member",
              "docComment": "/**\n * @hidden\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly readDependencies: "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "readDependencies",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!MeshoptCompression#setEncoderOptions:member(1)",
              "docComment": "/**\n * Configures Meshopt options for quality/compression tuning. The two methods rely on different pre-processing before compression, and should be compared on the basis of (a) quality/loss and (b) final asset size after _also_ applying a lossless compression such as gzip or brotli.\n *\n * - QUANTIZE: Default. Pre-process with {@link quantize quantize()} (lossy to specified precision) before applying lossless Meshopt compression. Offers a considerable compression ratio with or without further supercompression. Equivalent to `gltfpack -c`. - FILTER: Pre-process with lossy filters to improve compression, before applying lossless Meshopt compression. While output may initially be larger than with the QUANTIZE method, this method will benefit more from supercompression (e.g. gzip or brotli). Equivalent to `gltfpack -cc`.\n *\n * Output with the FILTER method will generally be smaller after supercompression (e.g. gzip or brotli) is applied, but may be larger than QUANTIZE output without it. Decoding is very fast with both methods.\n *\n * Example:\n * ```ts\n * import { MeshoptCompression } from '@gltf-transform/extensions';\n *\n * doc.createExtension(MeshoptCompression)\n * \t.setRequired(true)\n * \t.setEncoderOptions({\n * \t\tmethod: MeshoptCompression.EncoderMethod.QUANTIZE\n * \t});\n * ```\n *\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setEncoderOptions(options: "
                },
                {
                  "kind": "Reference",
                  "text": "EncoderOptions",
                  "canonicalReference": "@gltf-transform/extensions!~EncoderOptions_2:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "setEncoderOptions"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!MeshoptCompression#write:member(1)",
              "docComment": "/**\n * @hidden Puts encoded data into glTF output.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "write(context: "
                },
                {
                  "kind": "Reference",
                  "text": "WriterContext",
                  "canonicalReference": "@gltf-transform/core!WriterContext:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "context",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "write"
            },
            {
              "kind": "Property",
              "canonicalReference": "@gltf-transform/extensions!MeshoptCompression#writeDependencies:member",
              "docComment": "/**\n * @hidden\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly writeDependencies: "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "writeDependencies",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@gltf-transform/extensions!MeshQuantization:class",
          "docComment": "/**\n * # MeshQuantization\n *\n * [`KHR_mesh_quantization`](https://github.com/KhronosGroup/gltf/blob/main/extensions/2.0/Khronos/KHR_mesh_quantization/) expands allowed component types for vertex attributes to include 16- and 8-bit storage.\n *\n * Quantization provides a memory/precision tradeoff — depending on the application needs, 16-bit or 8-bit storage can be sufficient for mesh geometry, at 1/2 or 1/4 the size. For example, a 10x10 mesh might be written to a uint16 {@link Accessor}, with values `0–65536`, normalized to be interpreted as `0–1`. With an additional 10x scale on any node {@link Node} instantiating the quantized {@link Mesh}, the model retains its original scale with a minimal quality loss and up to 50% file size reduction.\n *\n * Defining no {@link ExtensionProperty} types, this {@link Extension} is simply attached to the {@link Document}, and affects the entire Document by allowing more flexible use of {@link Accessor} types for vertex attributes. Without the Extension, the same use of these data types would yield an invalid glTF document, under the stricter core glTF specification.\n *\n * Properties: - N/A\n *\n * ### Example\n * ```typescript\n * import { MeshQuantization } from '@gltf-transform/extensions';\n * import { quantize } from '@gltf-transform/functions';\n *\n * // Create an Extension attached to the Document.\n * const quantizationExtension = document.createExtension(MeshQuantization).setRequired(true);\n *\n * // Use Uint16Array, Uint8Array, Int16Array, and Int8Array in vertex accessors manually,\n * // or apply the provided quantize() function to compute quantized accessors automatically:\n * await document.transform(quantize({\n * \tquantizePosition: 16,\n * \tquantizeNormal: 12,\n * \tquantizeTexcoord: 14\n * }));\n * ```\n *\n * For more documentation about automatic quantization, see the {@link quantize} function.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class MeshQuantization extends "
            },
            {
              "kind": "Reference",
              "text": "Extension",
              "canonicalReference": "@gltf-transform/core!Extension:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "dist/khr-mesh-quantization/mesh-quantization.d.ts",
          "releaseTag": "Public",
          "name": "MeshQuantization",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "@gltf-transform/extensions!MeshQuantization.EXTENSION_NAME:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static readonly EXTENSION_NAME = "
                },
                {
                  "kind": "Content",
                  "text": "\"KHR_mesh_quantization\""
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "EXTENSION_NAME",
              "propertyTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@gltf-transform/extensions!MeshQuantization#extensionName:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly extensionName = "
                },
                {
                  "kind": "Content",
                  "text": "\"KHR_mesh_quantization\""
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "extensionName",
              "propertyTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!MeshQuantization#read:member(1)",
              "docComment": "/**\n * @hidden\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "read(_: "
                },
                {
                  "kind": "Reference",
                  "text": "ReaderContext",
                  "canonicalReference": "@gltf-transform/core!ReaderContext:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "_",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "read"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!MeshQuantization#write:member(1)",
              "docComment": "/**\n * @hidden\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "write(_: "
                },
                {
                  "kind": "Reference",
                  "text": "WriterContext",
                  "canonicalReference": "@gltf-transform/core!WriterContext:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "_",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "write"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@gltf-transform/extensions!Packet:class",
          "docComment": "/**\n * # Packet\n *\n * Defines an XMP packet associated with a Document or Property. See {@link XMP}.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class Packet extends "
            },
            {
              "kind": "Reference",
              "text": "ExtensionProperty",
              "canonicalReference": "@gltf-transform/core!ExtensionProperty:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "IPacket",
              "canonicalReference": "@gltf-transform/extensions!~IPacket:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "dist/khr-xmp-json-ld/packet.d.ts",
          "releaseTag": "Public",
          "name": "Packet",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "@gltf-transform/extensions!Packet.EXTENSION_NAME:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static EXTENSION_NAME: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "EXTENSION_NAME",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@gltf-transform/extensions!Packet#extensionName:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "extensionName: "
                },
                {
                  "kind": "Content",
                  "text": "typeof "
                },
                {
                  "kind": "Reference",
                  "text": "KHR_XMP_JSON_LD",
                  "canonicalReference": "@gltf-transform/extensions!~KHR_XMP_JSON_LD:var"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "extensionName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!Packet#fromJSONLD:member(1)",
              "docComment": "/**\n * Deserializes a JSONLD packet, then overwrites existing context and properties with the new values.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "fromJSONLD(jsonld: "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, unknown>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "jsonld",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "fromJSONLD"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!Packet#getContext:member(1)",
              "docComment": "/**\n * Returns the XMP context definition URL for the given term. See: https://json-ld.org/spec/latest/json-ld/#the-context\n *\n * @param term - Case-sensitive term. Usually a concise, lowercase, alphanumeric identifier.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getContext(): "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Term",
                  "canonicalReference": "@gltf-transform/extensions!~Term:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "TermDefinition",
                  "canonicalReference": "@gltf-transform/extensions!~TermDefinition:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "getContext"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!Packet#getDefaults:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected getDefaults(): "
                },
                {
                  "kind": "Reference",
                  "text": "Nullable",
                  "canonicalReference": "@gltf-transform/core!Nullable:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IPacket",
                  "canonicalReference": "@gltf-transform/extensions!~IPacket:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": true,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "getDefaults"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!Packet#getProperty:member(1)",
              "docComment": "/**\n * Returns the value of a property, as a literal or JSONLD object.\n *\n * Example:\n * ```typescript\n * packet.getProperty('dc:Creator'); // → {\"@list\": [\"Acme, Inc.\"]}\n * packet.getProperty('dc:Title'); // → {\"@type\": \"rdf:Alt\", \"rdf:_1\": {\"@language\": \"en-US\", \"@value\": \"Lamp\"}}\n * packet.getProperty('xmp:CreateDate'); // → \"2022-01-01\"\n * ```\n *\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getProperty(name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "@gltf-transform/extensions!~Value:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, unknown> | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "name",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "getProperty"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!Packet#init:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected init(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": true,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "init"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!Packet#listProperties:member(1)",
              "docComment": "/**\n * Lists properties defined in this packet.\n *\n * Example:\n * ```typescript\n * packet.listProperties(); // → ['dc:Language', 'dc:Creator', 'xmp:CreateDate']\n * ```\n *\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "listProperties(): "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "listProperties"
            },
            {
              "kind": "Property",
              "canonicalReference": "@gltf-transform/extensions!Packet#parentTypes:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "parentTypes: "
                },
                {
                  "kind": "Content",
                  "text": "typeof "
                },
                {
                  "kind": "Reference",
                  "text": "PARENT_TYPES",
                  "canonicalReference": "@gltf-transform/extensions!~PARENT_TYPES:var"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "parentTypes",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@gltf-transform/extensions!Packet#propertyType:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "propertyType: "
                },
                {
                  "kind": "Content",
                  "text": "'Packet'"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "propertyType",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!Packet#setContext:member(1)",
              "docComment": "/**\n * Sets the XMP context definition URL for the given term. See: https://json-ld.org/spec/latest/json-ld/#the-context\n *\n * Example:\n * ```typescript\n * packet.setContext({\n *   dc: 'http://purl.org/dc/elements/1.1/',\n *   model3d: 'https://schema.khronos.org/model3d/xsd/1.0/',\n * });\n * ```\n *\n * @param term - Case-sensitive term. Usually a concise, lowercase, alphanumeric identifier.\n *\n * @param definition - URI for XMP namespace.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setContext(context: "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Term",
                  "canonicalReference": "@gltf-transform/extensions!~Term:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "TermDefinition",
                  "canonicalReference": "@gltf-transform/extensions!~TermDefinition:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "context",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 7
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "setContext"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!Packet#setProperty:member(1)",
              "docComment": "/**\n * Sets the value of a property, as a literal or JSONLD object.\n *\n * Example:\n * ```typescript\n * packet.setProperty('dc:Creator', {'@list': ['Acme, Inc.']});\n * packet.setProperty('dc:Title', {\n * \t'@type': 'rdf:Alt',\n * \t'rdf:_1': {'@language': 'en-US', '@value': 'Lamp'}\n * });\n * packet.setProperty('model3d:preferredSurfaces', {'@list': ['vertical']});\n * ```\n *\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setProperty(name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", value: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "@gltf-transform/extensions!~Value:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, unknown>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "name",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 7
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "setProperty"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!Packet#toJSONLD:member(1)",
              "docComment": "/**\n * Serializes the packet context and properties to a JSONLD object.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "toJSONLD(): "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, unknown>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "toJSONLD"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@gltf-transform/extensions!PBRSpecularGlossiness:class",
          "docComment": "/**\n * # PBRSpecularGlossiness\n *\n * Converts a {@link Material} to a spec/gloss workflow. See {@link MaterialsPBRSpecularGlossiness}.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class PBRSpecularGlossiness extends "
            },
            {
              "kind": "Reference",
              "text": "ExtensionProperty",
              "canonicalReference": "@gltf-transform/core!ExtensionProperty:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "IPBRSpecularGlossiness",
              "canonicalReference": "@gltf-transform/extensions!~IPBRSpecularGlossiness:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "dist/khr-materials-pbr-specular-glossiness/pbr-specular-glossiness.d.ts",
          "releaseTag": "Public",
          "name": "PBRSpecularGlossiness",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "@gltf-transform/extensions!PBRSpecularGlossiness.EXTENSION_NAME:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static EXTENSION_NAME: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "EXTENSION_NAME",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@gltf-transform/extensions!PBRSpecularGlossiness#extensionName:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "extensionName: "
                },
                {
                  "kind": "Content",
                  "text": "typeof "
                },
                {
                  "kind": "Reference",
                  "text": "KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS",
                  "canonicalReference": "@gltf-transform/extensions!~KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS:var"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "extensionName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!PBRSpecularGlossiness#getDefaults:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected getDefaults(): "
                },
                {
                  "kind": "Reference",
                  "text": "Nullable",
                  "canonicalReference": "@gltf-transform/core!Nullable:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IPBRSpecularGlossiness",
                  "canonicalReference": "@gltf-transform/extensions!~IPBRSpecularGlossiness:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": true,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "getDefaults"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!PBRSpecularGlossiness#getDiffuseFactor:member(1)",
              "docComment": "/**\n * Diffuse; Linear-sRGB components. See {@link getDiffuseTexture}.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getDiffuseFactor(): "
                },
                {
                  "kind": "Reference",
                  "text": "vec4",
                  "canonicalReference": "@gltf-transform/core!vec4:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "getDiffuseFactor"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!PBRSpecularGlossiness#getDiffuseHex:member(1)",
              "docComment": "/**\n * Diffuse; sRGB hexadecimal color.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getDiffuseHex(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "getDiffuseHex"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!PBRSpecularGlossiness#getDiffuseTexture:member(1)",
              "docComment": "/**\n * Diffuse texture; sRGB. Alternative to baseColorTexture, used within the spec/gloss PBR workflow.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getDiffuseTexture(): "
                },
                {
                  "kind": "Reference",
                  "text": "Texture",
                  "canonicalReference": "@gltf-transform/core!Texture:class"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "getDiffuseTexture"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!PBRSpecularGlossiness#getDiffuseTextureInfo:member(1)",
              "docComment": "/**\n * Settings affecting the material's use of its diffuse texture. If no texture is attached, {@link TextureInfo} is `null`.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getDiffuseTextureInfo(): "
                },
                {
                  "kind": "Reference",
                  "text": "TextureInfo",
                  "canonicalReference": "@gltf-transform/core!TextureInfo:class"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "getDiffuseTextureInfo"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!PBRSpecularGlossiness#getGlossinessFactor:member(1)",
              "docComment": "/**\n * Glossiness; linear multiplier.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getGlossinessFactor(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "getGlossinessFactor"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!PBRSpecularGlossiness#getSpecularFactor:member(1)",
              "docComment": "/**\n * Specular; linear multiplier.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getSpecularFactor(): "
                },
                {
                  "kind": "Reference",
                  "text": "vec3",
                  "canonicalReference": "@gltf-transform/core!vec3:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "getSpecularFactor"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!PBRSpecularGlossiness#getSpecularGlossinessTexture:member(1)",
              "docComment": "/**\n * Spec/gloss texture; linear multiplier.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getSpecularGlossinessTexture(): "
                },
                {
                  "kind": "Reference",
                  "text": "Texture",
                  "canonicalReference": "@gltf-transform/core!Texture:class"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "getSpecularGlossinessTexture"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!PBRSpecularGlossiness#getSpecularGlossinessTextureInfo:member(1)",
              "docComment": "/**\n * Settings affecting the material's use of its spec/gloss texture. If no texture is attached, {@link TextureInfo} is `null`.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getSpecularGlossinessTextureInfo(): "
                },
                {
                  "kind": "Reference",
                  "text": "TextureInfo",
                  "canonicalReference": "@gltf-transform/core!TextureInfo:class"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "getSpecularGlossinessTextureInfo"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!PBRSpecularGlossiness#init:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected init(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": true,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "init"
            },
            {
              "kind": "Property",
              "canonicalReference": "@gltf-transform/extensions!PBRSpecularGlossiness#parentTypes:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "parentTypes: "
                },
                {
                  "kind": "Content",
                  "text": "["
                },
                {
                  "kind": "Reference",
                  "text": "PropertyType.MATERIAL",
                  "canonicalReference": "@gltf-transform/core!PropertyType.MATERIAL:member"
                },
                {
                  "kind": "Content",
                  "text": "]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "parentTypes",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@gltf-transform/extensions!PBRSpecularGlossiness#propertyType:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "propertyType: "
                },
                {
                  "kind": "Content",
                  "text": "'PBRSpecularGlossiness'"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "propertyType",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!PBRSpecularGlossiness#setDiffuseFactor:member(1)",
              "docComment": "/**\n * Diffuse; Linear-sRGB components. See {@link getDiffuseTexture}.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setDiffuseFactor(factor: "
                },
                {
                  "kind": "Reference",
                  "text": "vec4",
                  "canonicalReference": "@gltf-transform/core!vec4:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "factor",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "setDiffuseFactor"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!PBRSpecularGlossiness#setDiffuseHex:member(1)",
              "docComment": "/**\n * Diffuse; sRGB hexadecimal color.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setDiffuseHex(hex: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "hex",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "setDiffuseHex"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!PBRSpecularGlossiness#setDiffuseTexture:member(1)",
              "docComment": "/**\n * Sets diffuse texture. See {@link getDiffuseTexture}.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setDiffuseTexture(texture: "
                },
                {
                  "kind": "Reference",
                  "text": "Texture",
                  "canonicalReference": "@gltf-transform/core!Texture:class"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "texture",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "setDiffuseTexture"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!PBRSpecularGlossiness#setGlossinessFactor:member(1)",
              "docComment": "/**\n * Glossiness; linear multiplier.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setGlossinessFactor(factor: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "factor",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "setGlossinessFactor"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!PBRSpecularGlossiness#setSpecularFactor:member(1)",
              "docComment": "/**\n * Specular; linear multiplier.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setSpecularFactor(factor: "
                },
                {
                  "kind": "Reference",
                  "text": "vec3",
                  "canonicalReference": "@gltf-transform/core!vec3:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "factor",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "setSpecularFactor"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!PBRSpecularGlossiness#setSpecularGlossinessTexture:member(1)",
              "docComment": "/**\n * Spec/gloss texture; linear multiplier.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setSpecularGlossinessTexture(texture: "
                },
                {
                  "kind": "Reference",
                  "text": "Texture",
                  "canonicalReference": "@gltf-transform/core!Texture:class"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "texture",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "setSpecularGlossinessTexture"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@gltf-transform/extensions!Sheen:class",
          "docComment": "/**\n * # Sheen\n *\n * Defines sheen on a PBR {@link Material}. See {@link MaterialsSheen}.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class Sheen extends "
            },
            {
              "kind": "Reference",
              "text": "ExtensionProperty",
              "canonicalReference": "@gltf-transform/core!ExtensionProperty:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ISheen",
              "canonicalReference": "@gltf-transform/extensions!~ISheen:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "dist/khr-materials-sheen/sheen.d.ts",
          "releaseTag": "Public",
          "name": "Sheen",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "@gltf-transform/extensions!Sheen.EXTENSION_NAME:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static EXTENSION_NAME: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "EXTENSION_NAME",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@gltf-transform/extensions!Sheen#extensionName:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "extensionName: "
                },
                {
                  "kind": "Content",
                  "text": "typeof "
                },
                {
                  "kind": "Reference",
                  "text": "KHR_MATERIALS_SHEEN",
                  "canonicalReference": "@gltf-transform/extensions!~KHR_MATERIALS_SHEEN:var"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "extensionName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!Sheen#getDefaults:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected getDefaults(): "
                },
                {
                  "kind": "Reference",
                  "text": "Nullable",
                  "canonicalReference": "@gltf-transform/core!Nullable:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ISheen",
                  "canonicalReference": "@gltf-transform/extensions!~ISheen:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": true,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "getDefaults"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!Sheen#getSheenColorFactor:member(1)",
              "docComment": "/**\n * Sheen; linear multiplier.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getSheenColorFactor(): "
                },
                {
                  "kind": "Reference",
                  "text": "vec3",
                  "canonicalReference": "@gltf-transform/core!vec3:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "getSheenColorFactor"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!Sheen#getSheenColorHex:member(1)",
              "docComment": "/**\n * Sheen; hex color in sRGB colorspace.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getSheenColorHex(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "getSheenColorHex"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!Sheen#getSheenColorTexture:member(1)",
              "docComment": "/**\n * Sheen color texture, in sRGB colorspace.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getSheenColorTexture(): "
                },
                {
                  "kind": "Reference",
                  "text": "Texture",
                  "canonicalReference": "@gltf-transform/core!Texture:class"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "getSheenColorTexture"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!Sheen#getSheenColorTextureInfo:member(1)",
              "docComment": "/**\n * Settings affecting the material's use of its sheen color texture. If no texture is attached, {@link TextureInfo} is `null`.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getSheenColorTextureInfo(): "
                },
                {
                  "kind": "Reference",
                  "text": "TextureInfo",
                  "canonicalReference": "@gltf-transform/core!TextureInfo:class"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "getSheenColorTextureInfo"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!Sheen#getSheenRoughnessFactor:member(1)",
              "docComment": "/**\n * Sheen roughness; linear multiplier. See {@link getSheenRoughnessTexture}.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getSheenRoughnessFactor(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "getSheenRoughnessFactor"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!Sheen#getSheenRoughnessTexture:member(1)",
              "docComment": "/**\n * Sheen roughness texture; linear multiplier. The `a` channel of this texture specifies roughness, independent of the base layer's roughness.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getSheenRoughnessTexture(): "
                },
                {
                  "kind": "Reference",
                  "text": "Texture",
                  "canonicalReference": "@gltf-transform/core!Texture:class"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "getSheenRoughnessTexture"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!Sheen#getSheenRoughnessTextureInfo:member(1)",
              "docComment": "/**\n * Settings affecting the material's use of its sheen roughness texture. If no texture is attached, {@link TextureInfo} is `null`.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getSheenRoughnessTextureInfo(): "
                },
                {
                  "kind": "Reference",
                  "text": "TextureInfo",
                  "canonicalReference": "@gltf-transform/core!TextureInfo:class"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "getSheenRoughnessTextureInfo"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!Sheen#init:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected init(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": true,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "init"
            },
            {
              "kind": "Property",
              "canonicalReference": "@gltf-transform/extensions!Sheen#parentTypes:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "parentTypes: "
                },
                {
                  "kind": "Content",
                  "text": "["
                },
                {
                  "kind": "Reference",
                  "text": "PropertyType.MATERIAL",
                  "canonicalReference": "@gltf-transform/core!PropertyType.MATERIAL:member"
                },
                {
                  "kind": "Content",
                  "text": "]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "parentTypes",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@gltf-transform/extensions!Sheen#propertyType:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "propertyType: "
                },
                {
                  "kind": "Content",
                  "text": "'Sheen'"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "propertyType",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!Sheen#setSheenColorFactor:member(1)",
              "docComment": "/**\n * Sheen; linear multiplier.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setSheenColorFactor(factor: "
                },
                {
                  "kind": "Reference",
                  "text": "vec3",
                  "canonicalReference": "@gltf-transform/core!vec3:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "factor",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "setSheenColorFactor"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!Sheen#setSheenColorHex:member(1)",
              "docComment": "/**\n * Sheen; hex color in sRGB colorspace.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setSheenColorHex(hex: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "hex",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "setSheenColorHex"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!Sheen#setSheenColorTexture:member(1)",
              "docComment": "/**\n * Sets sheen color texture. See {@link getSheenColorTexture}.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setSheenColorTexture(texture: "
                },
                {
                  "kind": "Reference",
                  "text": "Texture",
                  "canonicalReference": "@gltf-transform/core!Texture:class"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "texture",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "setSheenColorTexture"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!Sheen#setSheenRoughnessFactor:member(1)",
              "docComment": "/**\n * Sheen roughness; linear multiplier. See {@link getSheenRoughnessTexture}.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setSheenRoughnessFactor(factor: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "factor",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "setSheenRoughnessFactor"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!Sheen#setSheenRoughnessTexture:member(1)",
              "docComment": "/**\n * Sets sheen roughness texture. The `a` channel of this texture specifies roughness, independent of the base layer's roughness.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setSheenRoughnessTexture(texture: "
                },
                {
                  "kind": "Reference",
                  "text": "Texture",
                  "canonicalReference": "@gltf-transform/core!Texture:class"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "texture",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "setSheenRoughnessTexture"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@gltf-transform/extensions!Specular:class",
          "docComment": "/**\n * # Specular\n *\n * Defines specular reflectivity on a PBR {@link Material}. See {@link MaterialsSpecular}.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class Specular extends "
            },
            {
              "kind": "Reference",
              "text": "ExtensionProperty",
              "canonicalReference": "@gltf-transform/core!ExtensionProperty:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ISpecular",
              "canonicalReference": "@gltf-transform/extensions!~ISpecular:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "dist/khr-materials-specular/specular.d.ts",
          "releaseTag": "Public",
          "name": "Specular",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "@gltf-transform/extensions!Specular.EXTENSION_NAME:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static EXTENSION_NAME: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "EXTENSION_NAME",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@gltf-transform/extensions!Specular#extensionName:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "extensionName: "
                },
                {
                  "kind": "Content",
                  "text": "typeof "
                },
                {
                  "kind": "Reference",
                  "text": "KHR_MATERIALS_SPECULAR",
                  "canonicalReference": "@gltf-transform/extensions!~KHR_MATERIALS_SPECULAR:var"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "extensionName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!Specular#getDefaults:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected getDefaults(): "
                },
                {
                  "kind": "Reference",
                  "text": "Nullable",
                  "canonicalReference": "@gltf-transform/core!Nullable:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ISpecular",
                  "canonicalReference": "@gltf-transform/extensions!~ISpecular:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": true,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "getDefaults"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!Specular#getSpecularColorFactor:member(1)",
              "docComment": "/**\n * Specular color; Linear-sRGB components. See {@link getSpecularTexture}.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getSpecularColorFactor(): "
                },
                {
                  "kind": "Reference",
                  "text": "vec3",
                  "canonicalReference": "@gltf-transform/core!vec3:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "getSpecularColorFactor"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!Specular#getSpecularColorHex:member(1)",
              "docComment": "/**\n * Specular color; sRGB hexadecimal color. See {@link getSpecularTexture}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getSpecularColorHex(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "getSpecularColorHex"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!Specular#getSpecularColorTexture:member(1)",
              "docComment": "/**\n * Specular color texture; linear multiplier. Defines the F0 color of the specular reflection (RGB channels, encoded in sRGB) in the the dielectric BRDF.\n *\n * Only RGB channels are used here, but this texture may optionally be packed with a specular factor (A) into a single texture.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getSpecularColorTexture(): "
                },
                {
                  "kind": "Reference",
                  "text": "Texture",
                  "canonicalReference": "@gltf-transform/core!Texture:class"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "getSpecularColorTexture"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!Specular#getSpecularColorTextureInfo:member(1)",
              "docComment": "/**\n * Settings affecting the material's use of its specular color texture. If no texture is attached, {@link TextureInfo} is `null`.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getSpecularColorTextureInfo(): "
                },
                {
                  "kind": "Reference",
                  "text": "TextureInfo",
                  "canonicalReference": "@gltf-transform/core!TextureInfo:class"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "getSpecularColorTextureInfo"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!Specular#getSpecularFactor:member(1)",
              "docComment": "/**\n * Specular; linear multiplier. See {@link getSpecularTexture}.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getSpecularFactor(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "getSpecularFactor"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!Specular#getSpecularTexture:member(1)",
              "docComment": "/**\n * Specular texture; linear multiplier. Configures the strength of the specular reflection in the dielectric BRDF. A value of zero disables the specular reflection, resulting in a pure diffuse material.\n *\n * Only the alpha (A) channel is used for specular strength, but this texture may optionally be packed with specular color (RGB) into a single texture.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getSpecularTexture(): "
                },
                {
                  "kind": "Reference",
                  "text": "Texture",
                  "canonicalReference": "@gltf-transform/core!Texture:class"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "getSpecularTexture"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!Specular#getSpecularTextureInfo:member(1)",
              "docComment": "/**\n * Settings affecting the material's use of its specular texture. If no texture is attached, {@link TextureInfo} is `null`.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getSpecularTextureInfo(): "
                },
                {
                  "kind": "Reference",
                  "text": "TextureInfo",
                  "canonicalReference": "@gltf-transform/core!TextureInfo:class"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "getSpecularTextureInfo"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!Specular#init:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected init(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": true,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "init"
            },
            {
              "kind": "Property",
              "canonicalReference": "@gltf-transform/extensions!Specular#parentTypes:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "parentTypes: "
                },
                {
                  "kind": "Content",
                  "text": "["
                },
                {
                  "kind": "Reference",
                  "text": "PropertyType.MATERIAL",
                  "canonicalReference": "@gltf-transform/core!PropertyType.MATERIAL:member"
                },
                {
                  "kind": "Content",
                  "text": "]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "parentTypes",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@gltf-transform/extensions!Specular#propertyType:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "propertyType: "
                },
                {
                  "kind": "Content",
                  "text": "'Specular'"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "propertyType",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!Specular#setSpecularColorFactor:member(1)",
              "docComment": "/**\n * Specular color; Linear-sRGB components. See {@link getSpecularTexture}.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setSpecularColorFactor(factor: "
                },
                {
                  "kind": "Reference",
                  "text": "vec3",
                  "canonicalReference": "@gltf-transform/core!vec3:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "factor",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "setSpecularColorFactor"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!Specular#setSpecularColorHex:member(1)",
              "docComment": "/**\n * Specular color; sRGB hexadecimal color. See {@link getSpecularTexture}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setSpecularColorHex(hex: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "hex",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "setSpecularColorHex"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!Specular#setSpecularColorTexture:member(1)",
              "docComment": "/**\n * Sets specular color texture. See {@link getSpecularColorTexture}.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setSpecularColorTexture(texture: "
                },
                {
                  "kind": "Reference",
                  "text": "Texture",
                  "canonicalReference": "@gltf-transform/core!Texture:class"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "texture",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "setSpecularColorTexture"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!Specular#setSpecularFactor:member(1)",
              "docComment": "/**\n * Specular; linear multiplier. See {@link getSpecularTexture}.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setSpecularFactor(factor: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "factor",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "setSpecularFactor"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!Specular#setSpecularTexture:member(1)",
              "docComment": "/**\n * Sets specular texture. See {@link getSpecularTexture}.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setSpecularTexture(texture: "
                },
                {
                  "kind": "Reference",
                  "text": "Texture",
                  "canonicalReference": "@gltf-transform/core!Texture:class"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "texture",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "setSpecularTexture"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@gltf-transform/extensions!TextureBasisu:class",
          "docComment": "/**\n * # TextureBasisu\n *\n * [`KHR_texture_basisu`](https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_texture_basisu) enables KTX2 GPU textures with Basis Universal supercompression for any material texture.\n *\n * GPU texture formats, unlike traditional image formats, remain compressed in GPU memory. As a result, they (1) upload to the GPU much more quickly, and (2) require much less GPU memory. In certain cases they may also have smaller filesizes than PNG or JPEG textures, but this is not guaranteed. GPU textures often require more careful tuning during compression to maintain image quality, but this extra effort is worthwhile for applications that need to maintain a smooth framerate while uploading images, or where GPU memory is limited.\n *\n * Defining no {@link ExtensionProperty} types, this {@link Extension} is simply attached to the {@link Document}, and affects the entire Document by allowing use of the `image/ktx2` MIME type and passing KTX2 image data to the {@link Texture.setImage} method. Without the Extension, the same MIME types and image data would yield an invalid glTF document, under the stricter core glTF specification.\n *\n * Properties: - N/A\n *\n * ### Example\n * ```typescript\n * import { TextureBasisu } from '@gltf-transform/extensions';\n *\n * // Create an Extension attached to the Document.\n * const basisuExtension = document.createExtension(TextureBasisu)\n * \t.setRequired(true);\n * document.createTexture('MyCompressedTexture')\n * \t.setMimeType('image/ktx2')\n * \t.setImage(fs.readFileSync('my-texture.ktx2'));\n * ```\n *\n * Compression is not done automatically when adding the extension as shown above — you must compress the image data first, then pass the `.ktx2` payload to {@link Texture.setImage}. The [glTF-Transform CLI](/cli.html) has functions to help with this, or any similar KTX2-capable utility will work.\n *\n * When the `KHR_texture_basisu` extension is added to a file by glTF-Transform, the extension should always be required. This tool does not support writing assets that \"fall back\" to optional PNG or JPEG image data.\n *\n * > _**NOTICE:** Compressing some textures — particularly 3-component (RGB) normal maps, and > occlusion/roughness/metalness maps, may give poor results with the ETC1S compression option. > These issues can often be avoided with the larger UASTC compression option, or by upscaling the > texture before compressing it. > > For best results when authoring new textures, use > [texture dilation](https://docs.substance3d.com/spdoc/padding-134643719.html) and minimize > prominent UV seams._\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class TextureBasisu extends "
            },
            {
              "kind": "Reference",
              "text": "Extension",
              "canonicalReference": "@gltf-transform/core!Extension:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "dist/khr-texture-basisu/texture-basisu.d.ts",
          "releaseTag": "Public",
          "name": "TextureBasisu",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "@gltf-transform/extensions!TextureBasisu.EXTENSION_NAME:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static readonly EXTENSION_NAME = "
                },
                {
                  "kind": "Content",
                  "text": "\"KHR_texture_basisu\""
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "EXTENSION_NAME",
              "propertyTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@gltf-transform/extensions!TextureBasisu#extensionName:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly extensionName = "
                },
                {
                  "kind": "Content",
                  "text": "\"KHR_texture_basisu\""
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "extensionName",
              "propertyTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!TextureBasisu#preread:member(1)",
              "docComment": "/**\n * @hidden\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "preread(context: "
                },
                {
                  "kind": "Reference",
                  "text": "ReaderContext",
                  "canonicalReference": "@gltf-transform/core!ReaderContext:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "context",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "preread"
            },
            {
              "kind": "Property",
              "canonicalReference": "@gltf-transform/extensions!TextureBasisu#prereadTypes:member",
              "docComment": "/**\n * @hidden\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly prereadTypes: "
                },
                {
                  "kind": "Reference",
                  "text": "PropertyType",
                  "canonicalReference": "@gltf-transform/core!PropertyType:enum"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "prereadTypes",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!TextureBasisu#read:member(1)",
              "docComment": "/**\n * @hidden\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "read(context: "
                },
                {
                  "kind": "Reference",
                  "text": "ReaderContext",
                  "canonicalReference": "@gltf-transform/core!ReaderContext:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "context",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "read"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!TextureBasisu.register:member(1)",
              "docComment": "/**\n * @hidden\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static register(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "register"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!TextureBasisu#write:member(1)",
              "docComment": "/**\n * @hidden\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "write(context: "
                },
                {
                  "kind": "Reference",
                  "text": "WriterContext",
                  "canonicalReference": "@gltf-transform/core!WriterContext:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "context",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "write"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@gltf-transform/extensions!TextureTransform:class",
          "docComment": "/**\n * # TextureTransform\n *\n * [`KHR_texture_transform`](https://github.com/KhronosGroup/gltf/blob/main/extensions/2.0/Khronos/KHR_texture_transform/) adds offset, rotation, and scale to {@link TextureInfo} properties.\n *\n * Affine UV transforms are useful for reducing the number of textures the GPU must load, improving performance when used in techniques like texture atlases. UV transforms cannot be animated at this time.\n *\n * Properties: - {@link Transform}\n *\n * ### Example\n *\n * The `TextureTransform` class provides a single {@link ExtensionProperty} type, `Transform`, which may be attached to any {@link TextureInfo} instance. For example:\n * ```typescript\n * import { TextureTransform } from '@gltf-transform/extensions';\n *\n * // Create an Extension attached to the Document.\n * const transformExtension = document.createExtension(TextureTransform)\n * \t.setRequired(true);\n *\n * // Create a reusable Transform.\n * const transform = transformExtension.createTransform()\n * \t.setScale([100, 100]);\n *\n * // Apply the Transform to a Material's baseColorTexture.\n * document.createMaterial()\n * \t.setBaseColorTexture(myTexture)\n * \t.getBaseColorTextureInfo()\n * \t.setExtension('KHR_texture_transform', transform);\n * ```\n *\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class TextureTransform extends "
            },
            {
              "kind": "Reference",
              "text": "Extension",
              "canonicalReference": "@gltf-transform/core!Extension:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "dist/khr-texture-transform/texture-transform.d.ts",
          "releaseTag": "Public",
          "name": "TextureTransform",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!TextureTransform#createTransform:member(1)",
              "docComment": "/**\n * Creates a new Transform property for use on a {@link TextureInfo}.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "createTransform(): "
                },
                {
                  "kind": "Reference",
                  "text": "Transform",
                  "canonicalReference": "@gltf-transform/extensions!Transform:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "createTransform"
            },
            {
              "kind": "Property",
              "canonicalReference": "@gltf-transform/extensions!TextureTransform.EXTENSION_NAME:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static readonly EXTENSION_NAME = "
                },
                {
                  "kind": "Content",
                  "text": "\"KHR_texture_transform\""
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "EXTENSION_NAME",
              "propertyTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@gltf-transform/extensions!TextureTransform#extensionName:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly extensionName = "
                },
                {
                  "kind": "Content",
                  "text": "\"KHR_texture_transform\""
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "extensionName",
              "propertyTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!TextureTransform#read:member(1)",
              "docComment": "/**\n * @hidden\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "read(context: "
                },
                {
                  "kind": "Reference",
                  "text": "ReaderContext",
                  "canonicalReference": "@gltf-transform/core!ReaderContext:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "context",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "read"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!TextureTransform#write:member(1)",
              "docComment": "/**\n * @hidden\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "write(context: "
                },
                {
                  "kind": "Reference",
                  "text": "WriterContext",
                  "canonicalReference": "@gltf-transform/core!WriterContext:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "context",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "write"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@gltf-transform/extensions!TextureWebP:class",
          "docComment": "/**\n * # TextureWebP\n *\n * [`EXT_texture_webp`](https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Vendor/EXT_texture_webp/) enables WebP images for any material texture.\n *\n * [[include:VENDOR_EXTENSIONS_NOTE.md]]\n *\n * WebP typically provides the minimal transmission size, but [requires browser support](https://caniuse.com/webp). Like PNG and JPEG, a WebP image is *fully decompressed* when uploaded to the GPU, which increases upload time and GPU memory cost. For seamless uploads and minimal GPU memory cost, it is necessary to use a GPU texture format like Basis Universal, with the `KHR_texture_basisu` extension.\n *\n * Defining no {@link ExtensionProperty} types, this {@link Extension} is simply attached to the {@link Document}, and affects the entire Document by allowing use of the `image/webp` MIME type and passing WebP image data to the {@link Texture.setImage} method. Without the Extension, the same MIME types and image data would yield an invalid glTF document, under the stricter core glTF specification.\n *\n * Properties: - N/A\n *\n * ### Example\n * ```typescript\n * import { TextureWebP } from '@gltf-transform/extensions';\n *\n * // Create an Extension attached to the Document.\n * const webpExtension = document.createExtension(TextureWebP)\n * \t.setRequired(true);\n * document.createTexture('MyWebPTexture')\n * \t.setMimeType('image/webp')\n * \t.setImage(fs.readFileSync('my-texture.webp'));\n * ```\n *\n * WebP conversion is not done automatically when adding the extension as shown above — you must convert the image data first, then pass the `.webp` payload to {@link Texture.setImage}.\n *\n * When the `EXT_texture_webp` extension is added to a file by glTF-Transform, the extension should always be required. This tool does not support writing assets that \"fall back\" to optional PNG or JPEG image data.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class TextureWebP extends "
            },
            {
              "kind": "Reference",
              "text": "Extension",
              "canonicalReference": "@gltf-transform/core!Extension:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "dist/ext-texture-webp/texture-webp.d.ts",
          "releaseTag": "Public",
          "name": "TextureWebP",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "@gltf-transform/extensions!TextureWebP.EXTENSION_NAME:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static readonly EXTENSION_NAME = "
                },
                {
                  "kind": "Content",
                  "text": "\"EXT_texture_webp\""
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "EXTENSION_NAME",
              "propertyTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@gltf-transform/extensions!TextureWebP#extensionName:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly extensionName = "
                },
                {
                  "kind": "Content",
                  "text": "\"EXT_texture_webp\""
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "extensionName",
              "propertyTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!TextureWebP#preread:member(1)",
              "docComment": "/**\n * @hidden\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "preread(context: "
                },
                {
                  "kind": "Reference",
                  "text": "ReaderContext",
                  "canonicalReference": "@gltf-transform/core!ReaderContext:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "context",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "preread"
            },
            {
              "kind": "Property",
              "canonicalReference": "@gltf-transform/extensions!TextureWebP#prereadTypes:member",
              "docComment": "/**\n * @hidden\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly prereadTypes: "
                },
                {
                  "kind": "Reference",
                  "text": "PropertyType",
                  "canonicalReference": "@gltf-transform/core!PropertyType:enum"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "prereadTypes",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!TextureWebP#read:member(1)",
              "docComment": "/**\n * @hidden\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "read(context: "
                },
                {
                  "kind": "Reference",
                  "text": "ReaderContext",
                  "canonicalReference": "@gltf-transform/core!ReaderContext:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "context",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "read"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!TextureWebP.register:member(1)",
              "docComment": "/**\n * @hidden\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static register(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "register"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!TextureWebP#write:member(1)",
              "docComment": "/**\n * @hidden\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "write(context: "
                },
                {
                  "kind": "Reference",
                  "text": "WriterContext",
                  "canonicalReference": "@gltf-transform/core!WriterContext:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "context",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "write"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@gltf-transform/extensions!Transform:class",
          "docComment": "/**\n * # Transform\n *\n * Defines UV transform for a {@link TextureInfo}. See {@link TextureTransform}.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class Transform extends "
            },
            {
              "kind": "Reference",
              "text": "ExtensionProperty",
              "canonicalReference": "@gltf-transform/core!ExtensionProperty:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ITransform",
              "canonicalReference": "@gltf-transform/extensions!~ITransform:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "dist/khr-texture-transform/transform.d.ts",
          "releaseTag": "Public",
          "name": "Transform",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "@gltf-transform/extensions!Transform.EXTENSION_NAME:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static EXTENSION_NAME: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "EXTENSION_NAME",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@gltf-transform/extensions!Transform#extensionName:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "extensionName: "
                },
                {
                  "kind": "Content",
                  "text": "typeof "
                },
                {
                  "kind": "Reference",
                  "text": "KHR_TEXTURE_TRANSFORM",
                  "canonicalReference": "@gltf-transform/extensions!~KHR_TEXTURE_TRANSFORM:var"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "extensionName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!Transform#getDefaults:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected getDefaults(): "
                },
                {
                  "kind": "Reference",
                  "text": "Nullable",
                  "canonicalReference": "@gltf-transform/core!Nullable:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ITransform",
                  "canonicalReference": "@gltf-transform/extensions!~ITransform:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": true,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "getDefaults"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!Transform#getOffset:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getOffset(): "
                },
                {
                  "kind": "Reference",
                  "text": "vec2",
                  "canonicalReference": "@gltf-transform/core!vec2:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "getOffset"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!Transform#getRotation:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getRotation(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "getRotation"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!Transform#getScale:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getScale(): "
                },
                {
                  "kind": "Reference",
                  "text": "vec2",
                  "canonicalReference": "@gltf-transform/core!vec2:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "getScale"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!Transform#getTexCoord:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getTexCoord(): "
                },
                {
                  "kind": "Content",
                  "text": "number | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "getTexCoord"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!Transform#init:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected init(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": true,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "init"
            },
            {
              "kind": "Property",
              "canonicalReference": "@gltf-transform/extensions!Transform#parentTypes:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "parentTypes: "
                },
                {
                  "kind": "Content",
                  "text": "["
                },
                {
                  "kind": "Reference",
                  "text": "PropertyType.TEXTURE_INFO",
                  "canonicalReference": "@gltf-transform/core!PropertyType.TEXTURE_INFO:member"
                },
                {
                  "kind": "Content",
                  "text": "]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "parentTypes",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@gltf-transform/extensions!Transform#propertyType:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "propertyType: "
                },
                {
                  "kind": "Content",
                  "text": "'Transform'"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "propertyType",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!Transform#setOffset:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setOffset(offset: "
                },
                {
                  "kind": "Reference",
                  "text": "vec2",
                  "canonicalReference": "@gltf-transform/core!vec2:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "offset",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "setOffset"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!Transform#setRotation:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setRotation(rotation: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "rotation",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "setRotation"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!Transform#setScale:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setScale(scale: "
                },
                {
                  "kind": "Reference",
                  "text": "vec2",
                  "canonicalReference": "@gltf-transform/core!vec2:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "scale",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "setScale"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!Transform#setTexCoord:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setTexCoord(texCoord: "
                },
                {
                  "kind": "Content",
                  "text": "number | null"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "texCoord",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "setTexCoord"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@gltf-transform/extensions!Transmission:class",
          "docComment": "/**\n * # Transmission\n *\n * Defines optical transmission on a PBR {@link Material}. See {@link MaterialsTransmission}.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class Transmission extends "
            },
            {
              "kind": "Reference",
              "text": "ExtensionProperty",
              "canonicalReference": "@gltf-transform/core!ExtensionProperty:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ITransmission",
              "canonicalReference": "@gltf-transform/extensions!~ITransmission:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "dist/khr-materials-transmission/transmission.d.ts",
          "releaseTag": "Public",
          "name": "Transmission",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "@gltf-transform/extensions!Transmission.EXTENSION_NAME:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static EXTENSION_NAME: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "EXTENSION_NAME",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@gltf-transform/extensions!Transmission#extensionName:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "extensionName: "
                },
                {
                  "kind": "Content",
                  "text": "typeof "
                },
                {
                  "kind": "Reference",
                  "text": "KHR_MATERIALS_TRANSMISSION",
                  "canonicalReference": "@gltf-transform/extensions!~KHR_MATERIALS_TRANSMISSION:var"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "extensionName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!Transmission#getDefaults:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected getDefaults(): "
                },
                {
                  "kind": "Reference",
                  "text": "Nullable",
                  "canonicalReference": "@gltf-transform/core!Nullable:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ITransmission",
                  "canonicalReference": "@gltf-transform/extensions!~ITransmission:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": true,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "getDefaults"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!Transmission#getTransmissionFactor:member(1)",
              "docComment": "/**\n * Transmission; linear multiplier. See {@link getTransmissionTexture}.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getTransmissionFactor(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "getTransmissionFactor"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!Transmission#getTransmissionTexture:member(1)",
              "docComment": "/**\n * Transmission texture; linear multiplier. The `r` channel of this texture specifies transmission [0-1] of the material's surface. By default this is a thin transparency effect, but volume effects (refraction, subsurface scattering) may be introduced with the addition of the `KHR_materials_volume` extension.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getTransmissionTexture(): "
                },
                {
                  "kind": "Reference",
                  "text": "Texture",
                  "canonicalReference": "@gltf-transform/core!Texture:class"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "getTransmissionTexture"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!Transmission#getTransmissionTextureInfo:member(1)",
              "docComment": "/**\n * Settings affecting the material's use of its transmission texture. If no texture is attached, {@link TextureInfo} is `null`.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getTransmissionTextureInfo(): "
                },
                {
                  "kind": "Reference",
                  "text": "TextureInfo",
                  "canonicalReference": "@gltf-transform/core!TextureInfo:class"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "getTransmissionTextureInfo"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!Transmission#init:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected init(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": true,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "init"
            },
            {
              "kind": "Property",
              "canonicalReference": "@gltf-transform/extensions!Transmission#parentTypes:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "parentTypes: "
                },
                {
                  "kind": "Content",
                  "text": "["
                },
                {
                  "kind": "Reference",
                  "text": "PropertyType.MATERIAL",
                  "canonicalReference": "@gltf-transform/core!PropertyType.MATERIAL:member"
                },
                {
                  "kind": "Content",
                  "text": "]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "parentTypes",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@gltf-transform/extensions!Transmission#propertyType:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "propertyType: "
                },
                {
                  "kind": "Content",
                  "text": "'Transmission'"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "propertyType",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!Transmission#setTransmissionFactor:member(1)",
              "docComment": "/**\n * Transmission; linear multiplier. See {@link getTransmissionTexture}.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setTransmissionFactor(factor: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "factor",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "setTransmissionFactor"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!Transmission#setTransmissionTexture:member(1)",
              "docComment": "/**\n * Sets transmission texture. See {@link getTransmissionTexture}.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setTransmissionTexture(texture: "
                },
                {
                  "kind": "Reference",
                  "text": "Texture",
                  "canonicalReference": "@gltf-transform/core!Texture:class"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "texture",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "setTransmissionTexture"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@gltf-transform/extensions!Unlit:class",
          "docComment": "/**\n * # Unlit\n *\n * Converts a PBR {@link Material} to an unlit shading model. See {@link MaterialsUnlit}.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class Unlit extends "
            },
            {
              "kind": "Reference",
              "text": "ExtensionProperty",
              "canonicalReference": "@gltf-transform/core!ExtensionProperty:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "dist/khr-materials-unlit/unlit.d.ts",
          "releaseTag": "Public",
          "name": "Unlit",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "@gltf-transform/extensions!Unlit.EXTENSION_NAME:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static EXTENSION_NAME: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "EXTENSION_NAME",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@gltf-transform/extensions!Unlit#extensionName:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "extensionName: "
                },
                {
                  "kind": "Content",
                  "text": "typeof "
                },
                {
                  "kind": "Reference",
                  "text": "KHR_MATERIALS_UNLIT",
                  "canonicalReference": "@gltf-transform/extensions!~KHR_MATERIALS_UNLIT:var"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "extensionName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!Unlit#init:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected init(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": true,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "init"
            },
            {
              "kind": "Property",
              "canonicalReference": "@gltf-transform/extensions!Unlit#parentTypes:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "parentTypes: "
                },
                {
                  "kind": "Content",
                  "text": "["
                },
                {
                  "kind": "Reference",
                  "text": "PropertyType.MATERIAL",
                  "canonicalReference": "@gltf-transform/core!PropertyType.MATERIAL:member"
                },
                {
                  "kind": "Content",
                  "text": "]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "parentTypes",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@gltf-transform/extensions!Unlit#propertyType:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "propertyType: "
                },
                {
                  "kind": "Content",
                  "text": "'Unlit'"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "propertyType",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@gltf-transform/extensions!Variant:class",
          "docComment": "/**\n * # Variant\n *\n * Defines a variant of a {@link Material}. See {@link MaterialsVariants}.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class Variant extends "
            },
            {
              "kind": "Reference",
              "text": "ExtensionProperty",
              "canonicalReference": "@gltf-transform/core!ExtensionProperty:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "dist/khr-materials-variants/variant.d.ts",
          "releaseTag": "Public",
          "name": "Variant",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "@gltf-transform/extensions!Variant.EXTENSION_NAME:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static EXTENSION_NAME: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "EXTENSION_NAME",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@gltf-transform/extensions!Variant#extensionName:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "extensionName: "
                },
                {
                  "kind": "Content",
                  "text": "typeof "
                },
                {
                  "kind": "Reference",
                  "text": "KHR_MATERIALS_VARIANTS",
                  "canonicalReference": "@gltf-transform/extensions!~KHR_MATERIALS_VARIANTS:var"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "extensionName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!Variant#init:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected init(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": true,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "init"
            },
            {
              "kind": "Property",
              "canonicalReference": "@gltf-transform/extensions!Variant#parentTypes:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "parentTypes: "
                },
                {
                  "kind": "Content",
                  "text": "['MappingList']"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "parentTypes",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@gltf-transform/extensions!Variant#propertyType:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "propertyType: "
                },
                {
                  "kind": "Content",
                  "text": "'Variant'"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "propertyType",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@gltf-transform/extensions!Volume:class",
          "docComment": "/**\n * # Volume\n *\n * Defines volume on a PBR {@link Material}. See {@link MaterialsVolume}.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class Volume extends "
            },
            {
              "kind": "Reference",
              "text": "ExtensionProperty",
              "canonicalReference": "@gltf-transform/core!ExtensionProperty:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "IVolume",
              "canonicalReference": "@gltf-transform/extensions!~IVolume:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "dist/khr-materials-volume/volume.d.ts",
          "releaseTag": "Public",
          "name": "Volume",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "@gltf-transform/extensions!Volume.EXTENSION_NAME:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static EXTENSION_NAME: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "EXTENSION_NAME",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@gltf-transform/extensions!Volume#extensionName:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "extensionName: "
                },
                {
                  "kind": "Content",
                  "text": "typeof "
                },
                {
                  "kind": "Reference",
                  "text": "KHR_MATERIALS_VOLUME",
                  "canonicalReference": "@gltf-transform/extensions!~KHR_MATERIALS_VOLUME:var"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "extensionName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!Volume#getAttenuationColor:member(1)",
              "docComment": "/**\n * Color (linear) that white light turns into due to absorption when reaching the attenuation distance.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getAttenuationColor(): "
                },
                {
                  "kind": "Reference",
                  "text": "vec3",
                  "canonicalReference": "@gltf-transform/core!vec3:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "getAttenuationColor"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!Volume#getAttenuationColorHex:member(1)",
              "docComment": "/**\n * Color (sRGB) that white light turns into due to absorption when reaching the attenuation distance.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getAttenuationColorHex(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "getAttenuationColorHex"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!Volume#getAttenuationDistance:member(1)",
              "docComment": "/**\n * Density of the medium given as the average distance in meters that light travels in the medium before interacting with a particle.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getAttenuationDistance(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "getAttenuationDistance"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!Volume#getDefaults:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected getDefaults(): "
                },
                {
                  "kind": "Reference",
                  "text": "Nullable",
                  "canonicalReference": "@gltf-transform/core!Nullable:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IVolume",
                  "canonicalReference": "@gltf-transform/extensions!~IVolume:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": true,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "getDefaults"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!Volume#getThicknessFactor:member(1)",
              "docComment": "/**\n * Thickness of the volume beneath the surface in meters in the local coordinate system of the node. If the value is 0 the material is thin-walled. Otherwise the material is a volume boundary. The doubleSided property has no effect on volume boundaries.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getThicknessFactor(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "getThicknessFactor"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!Volume#getThicknessTexture:member(1)",
              "docComment": "/**\n * Texture that defines the thickness, stored in the G channel. This will be multiplied by thicknessFactor.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getThicknessTexture(): "
                },
                {
                  "kind": "Reference",
                  "text": "Texture",
                  "canonicalReference": "@gltf-transform/core!Texture:class"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "getThicknessTexture"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!Volume#getThicknessTextureInfo:member(1)",
              "docComment": "/**\n * Settings affecting the material's use of its thickness texture. If no texture is attached, {@link TextureInfo} is `null`.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getThicknessTextureInfo(): "
                },
                {
                  "kind": "Reference",
                  "text": "TextureInfo",
                  "canonicalReference": "@gltf-transform/core!TextureInfo:class"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "getThicknessTextureInfo"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!Volume#init:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected init(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": true,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "init"
            },
            {
              "kind": "Property",
              "canonicalReference": "@gltf-transform/extensions!Volume#parentTypes:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "parentTypes: "
                },
                {
                  "kind": "Content",
                  "text": "["
                },
                {
                  "kind": "Reference",
                  "text": "PropertyType.MATERIAL",
                  "canonicalReference": "@gltf-transform/core!PropertyType.MATERIAL:member"
                },
                {
                  "kind": "Content",
                  "text": "]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "parentTypes",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@gltf-transform/extensions!Volume#propertyType:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "propertyType: "
                },
                {
                  "kind": "Content",
                  "text": "'Volume'"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "propertyType",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!Volume#setAttenuationColor:member(1)",
              "docComment": "/**\n * Color (linear) that white light turns into due to absorption when reaching the attenuation distance.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setAttenuationColor(color: "
                },
                {
                  "kind": "Reference",
                  "text": "vec3",
                  "canonicalReference": "@gltf-transform/core!vec3:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "color",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "setAttenuationColor"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!Volume#setAttenuationColorHex:member(1)",
              "docComment": "/**\n * Color (sRGB) that white light turns into due to absorption when reaching the attenuation distance.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setAttenuationColorHex(hex: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "hex",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "setAttenuationColorHex"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!Volume#setAttenuationDistance:member(1)",
              "docComment": "/**\n * Density of the medium given as the average distance in meters that light travels in the medium before interacting with a particle.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setAttenuationDistance(distance: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "distance",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "setAttenuationDistance"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!Volume#setThicknessFactor:member(1)",
              "docComment": "/**\n * Thickness of the volume beneath the surface in meters in the local coordinate system of the node. If the value is 0 the material is thin-walled. Otherwise the material is a volume boundary. The doubleSided property has no effect on volume boundaries.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setThicknessFactor(factor: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "factor",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "setThicknessFactor"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!Volume#setThicknessTexture:member(1)",
              "docComment": "/**\n * Texture that defines the thickness, stored in the G channel. This will be multiplied by thicknessFactor.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setThicknessTexture(texture: "
                },
                {
                  "kind": "Reference",
                  "text": "Texture",
                  "canonicalReference": "@gltf-transform/core!Texture:class"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "texture",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "setThicknessTexture"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@gltf-transform/extensions!XMP:class",
          "docComment": "/**\n * # XMP\n *\n * [KHR_xmp_json_ld](https://github.com/KhronosGroup/gltf/blob/main/extensions/2.0/Khronos/KHR_xmp_json_ld/) defines XMP metadata associated with a glTF asset.\n *\n * XMP metadata provides standardized fields describing the content, provenance, usage restrictions, or other attributes of a 3D model. XMP metadata does not generally affect the parsing or runtime behavior of the content — for that, use custom extensions, custom vertex attributes, or extras. Similarly, storage mechanisms other than XMP should be preferred for binary content like mesh data, animations, or textures.\n *\n * Generally XMP metadata is associated with the entire glTF asset by attaching an XMP {@link Packet} to the document {@link Root}. In less common cases where metadata must be associated with specific subsets of a document, XMP Packets may be attached to {@link Scene}, {@link Node}, {@link Mesh}, {@link Material}, {@link Texture}, or {@link Animation} properties.\n *\n * Within each packet, XMP properties become available when an [XMP namespace](https://www.adobe.io/xmp/docs/XMPNamespaces/) is registered with {@link Packet.setContext}. Packets cannot use properties whose namespaces are not registered as context. While not all XMP namespaces are relevant to 3D assets, some common namespaces provide useful metadata about authorship and provenance. Additionally, the `model3d` namespace provides certain properties specific to 3D content, such as Augmented Reality (AR) orientation data.\n *\n * Common XMP contexts for 3D models include:\n *\n * | Prefix | URI | Name | |:------------|:--------------------------------------------|:-------------------------------| | `dc` | http://purl.org/dc/elements/1.1/ | Dublin Core | | `model3d` | https://schema.khronos.org/model3d/xsd/1.0/ | Model 3D | | `rdf` | http://www.w3.org/1999/02/22-rdf-syntax-ns# | Resource Description Framework | | `xmp` | http://ns.adobe.com/xap/1.0/ | XMP | | `xmpRights` | http://ns.adobe.com/xap/1.0/rights/ | XMP Rights Management |\n *\n * Only the XMP contexts required for a packet should be assigned, and different packets in the same asset may use different contexts. For greater detail on available XMP contexts and how to use them in glTF assets, see the [3DC Metadata Recommendations](https://github.com/KhronosGroup/3DC-Metadata-Recommendations/blob/main/model3d.md).\n *\n * Properties: - {@link Packet}\n *\n * ### Example\n * ```typescript\n * import { XMP, Packet } from '@gltf-transform/extensions';\n *\n * // Create an Extension attached to the Document.\n * const xmpExtension = document.createExtension(XMP);\n *\n * // Create Packet property.\n * const packet = xmpExtension.createPacket()\n * \t.setContext({\n * \t\tdc: 'http://purl.org/dc/elements/1.1/',\n * \t})\n * \t.setProperty('dc:Creator', {\"@list\": [\"Acme, Inc.\"]});\n *\n * // Option 1: Assign to Document Root.\n * document.getRoot().setExtension('KHR_xmp_json_ld', packet);\n *\n * // Option 2: Assign to a specific Property.\n * texture.setExtension('KHR_xmp_json_ld', packet);\n * ```\n *\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class XMP extends "
            },
            {
              "kind": "Reference",
              "text": "Extension",
              "canonicalReference": "@gltf-transform/core!Extension:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "dist/khr-xmp-json-ld/xmp.d.ts",
          "releaseTag": "Public",
          "name": "XMP",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!XMP#createPacket:member(1)",
              "docComment": "/**\n * Creates a new XMP packet, to be linked with a {@link Document} or {@link Property Properties}.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "createPacket(): "
                },
                {
                  "kind": "Reference",
                  "text": "Packet",
                  "canonicalReference": "@gltf-transform/extensions!Packet:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "createPacket"
            },
            {
              "kind": "Property",
              "canonicalReference": "@gltf-transform/extensions!XMP.EXTENSION_NAME:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static readonly EXTENSION_NAME = "
                },
                {
                  "kind": "Content",
                  "text": "\"KHR_xmp_json_ld\""
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "EXTENSION_NAME",
              "propertyTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@gltf-transform/extensions!XMP#extensionName:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly extensionName = "
                },
                {
                  "kind": "Content",
                  "text": "\"KHR_xmp_json_ld\""
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "extensionName",
              "propertyTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!XMP#listPackets:member(1)",
              "docComment": "/**\n * Lists XMP packets currently defined in a {@link Document}.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "listPackets(): "
                },
                {
                  "kind": "Reference",
                  "text": "Packet",
                  "canonicalReference": "@gltf-transform/extensions!Packet:class"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "listPackets"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!XMP#read:member(1)",
              "docComment": "/**\n * @hidden\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "read(context: "
                },
                {
                  "kind": "Reference",
                  "text": "ReaderContext",
                  "canonicalReference": "@gltf-transform/core!ReaderContext:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "context",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "read"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gltf-transform/extensions!XMP#write:member(1)",
              "docComment": "/**\n * @hidden\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "write(context: "
                },
                {
                  "kind": "Reference",
                  "text": "WriterContext",
                  "canonicalReference": "@gltf-transform/core!WriterContext:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "context",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "write"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        }
      ]
    }
  ]
}
